<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Data.SQLite.1.0.88.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SystemDataSQLiteDelegates">
            <summary>Contains custom delegates used for the stubs and shims of System.Data.SQLite</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimCollationSequence">
            <summary>Shim type of System.Data.SQLite.CollationSequence</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimCollationSequence.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimCollationSequence.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimCollationSequence.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimCollationSequence.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimCollationSequence.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimCommitEventArgs">
            <summary>Shim type of System.Data.SQLite.CommitEventArgs</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimCommitEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimCommitEventArgs.#ctor(System.Data.SQLite.CommitEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimCommitEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimCommitEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimCommitEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimCommitEventArgs.Constructor">
            <summary>Sets the shim of CommitEventArgs.CommitEventArgs()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimCommitEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimConnectionEventArgs">
            <summary>Shim type of System.Data.SQLite.ConnectionEventArgs</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimConnectionEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimConnectionEventArgs.#ctor(System.Data.SQLite.ConnectionEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimConnectionEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimConnectionEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimConnectionEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimConnectionEventArgs.ConstructorSQLiteConnectionEventTypeStateChangeEventArgsIDbTransactionIDbCommandStringObject">
            <summary>Sets the shim of ConnectionEventArgs.ConnectionEventArgs(SQLiteConnectionEventType eventType, StateChangeEventArgs eventArgs, IDbTransaction transaction, IDbCommand command, String text, Object data)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimConnectionEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimLogEventArgs">
            <summary>Shim type of System.Data.SQLite.LogEventArgs</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimLogEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimLogEventArgs.#ctor(System.Data.SQLite.LogEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimLogEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimLogEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimLogEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimLogEventArgs.ConstructorIntPtrObjectStringObject">
            <summary>Sets the shim of LogEventArgs.LogEventArgs(IntPtr pUserData, Object errorCode, String message, Object data)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimLogEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteCommand">
            <summary>Shim type of System.Data.SQLite.SQLiteCommand</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommand.#ctor(System.Data.SQLite.SQLiteCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommand.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommand.Bind(System.Data.IDbCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommand.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommand.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.Cancel">
            <summary>Sets the shim of SQLiteCommand.Cancel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CheckDisposed">
            <summary>Sets the shim of SQLiteCommand.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CheckSQLiteCommand">
            <summary>Sets the shim of SQLiteCommand.Check(SQLiteCommand command)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ClearCommands">
            <summary>Sets the shim of SQLiteCommand.ClearCommands()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ClearDataReader">
            <summary>Sets the shim of SQLiteCommand.ClearDataReader()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.Clone">
            <summary>Sets the shim of SQLiteCommand.Clone()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CommandTextGet">
            <summary>Sets the shim of SQLiteCommand.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CommandTextSetString">
            <summary>Sets the shim of SQLiteCommand.set_CommandText(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CommandTimeoutGet">
            <summary>Sets the shim of SQLiteCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CommandTimeoutSetInt32">
            <summary>Sets the shim of SQLiteCommand.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CommandTypeGet">
            <summary>Sets the shim of SQLiteCommand.get_CommandType()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CommandTypeSetCommandType">
            <summary>Sets the shim of SQLiteCommand.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ConnectionGet">
            <summary>Sets the shim of SQLiteCommand.get_Connection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ConnectionSetSQLiteConnection">
            <summary>Sets the shim of SQLiteCommand.set_Connection(SQLiteConnection value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.Constructor">
            <summary>Sets the shim of SQLiteCommand.SQLiteCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ConstructorSQLiteCommand">
            <summary>Sets the shim of SQLiteCommand.SQLiteCommand(SQLiteCommand source)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ConstructorSQLiteConnection">
            <summary>Sets the shim of SQLiteCommand.SQLiteCommand(SQLiteConnection connection)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ConstructorString">
            <summary>Sets the shim of SQLiteCommand.SQLiteCommand(String commandText)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ConstructorStringSQLiteConnection">
            <summary>Sets the shim of SQLiteCommand.SQLiteCommand(String commandText, SQLiteConnection connection)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ConstructorStringSQLiteConnectionSQLiteTransaction">
            <summary>Sets the shim of SQLiteCommand.SQLiteCommand(String commandText, SQLiteConnection connection, SQLiteTransaction transaction)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CreateDbParameter">
            <summary>Sets the shim of SQLiteCommand.CreateDbParameter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.CreateParameter">
            <summary>Sets the shim of SQLiteCommand.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.DbConnectionGet">
            <summary>Sets the shim of SQLiteCommand.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.DbConnectionSetDbConnection">
            <summary>Sets the shim of SQLiteCommand.set_DbConnection(DbConnection value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.DbParameterCollectionGet">
            <summary>Sets the shim of SQLiteCommand.get_DbParameterCollection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.DbTransactionGet">
            <summary>Sets the shim of SQLiteCommand.get_DbTransaction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.DbTransactionSetDbTransaction">
            <summary>Sets the shim of SQLiteCommand.set_DbTransaction(DbTransaction value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.DesignTimeVisibleGet">
            <summary>Sets the shim of SQLiteCommand.get_DesignTimeVisible()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.DesignTimeVisibleSetBoolean">
            <summary>Sets the shim of SQLiteCommand.set_DesignTimeVisible(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.DisposeBoolean">
            <summary>Sets the shim of SQLiteCommand.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ExecuteDbDataReaderCommandBehavior">
            <summary>Sets the shim of SQLiteCommand.ExecuteDbDataReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ExecuteNonQuery">
            <summary>Sets the shim of SQLiteCommand.ExecuteNonQuery()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ExecuteReader">
            <summary>Sets the shim of SQLiteCommand.ExecuteReader()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ExecuteReaderCommandBehavior">
            <summary>Sets the shim of SQLiteCommand.ExecuteReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ExecuteScalar">
            <summary>Sets the shim of SQLiteCommand.ExecuteScalar()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ExecuteStringSQLiteExecuteTypeStringObjectArray">
            <summary>Sets the shim of SQLiteCommand.Execute(String commandText, SQLiteExecuteType executeType, String connectionString, Object[] args)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.GetFlagsSQLiteCommand">
            <summary>Sets the shim of SQLiteCommand.GetFlags(SQLiteCommand command)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.InitializeForReader">
            <summary>Sets the shim of SQLiteCommand.InitializeForReader()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.ParametersGet">
            <summary>Sets the shim of SQLiteCommand.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.Prepare">
            <summary>Sets the shim of SQLiteCommand.Prepare()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.StaticConstructor">
            <summary>Sets the shim of SQLiteCommand.SQLiteCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.TransactionGet">
            <summary>Sets the shim of SQLiteCommand.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.TransactionSetSQLiteTransaction">
            <summary>Sets the shim of SQLiteCommand.set_Transaction(SQLiteTransaction value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.UpdatedRowSourceGet">
            <summary>Sets the shim of SQLiteCommand.get_UpdatedRowSource()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.UpdatedRowSourceSetUpdateRowSource">
            <summary>Sets the shim of SQLiteCommand.set_UpdatedRowSource(UpdateRowSource value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.Cancel">
            <summary>Sets the shim of SQLiteCommand.Cancel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteCommand.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ClearCommands">
            <summary>Sets the shim of SQLiteCommand.ClearCommands()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ClearDataReader">
            <summary>Sets the shim of SQLiteCommand.ClearDataReader()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.Clone">
            <summary>Sets the shim of SQLiteCommand.Clone()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CommandTextGet">
            <summary>Sets the shim of SQLiteCommand.get_CommandText()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CommandTextSetString">
            <summary>Sets the shim of SQLiteCommand.set_CommandText(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CommandTimeoutGet">
            <summary>Sets the shim of SQLiteCommand.get_CommandTimeout()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CommandTimeoutSetInt32">
            <summary>Sets the shim of SQLiteCommand.set_CommandTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CommandTypeGet">
            <summary>Sets the shim of SQLiteCommand.get_CommandType()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CommandTypeSetCommandType">
            <summary>Sets the shim of SQLiteCommand.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ConnectionGet">
            <summary>Sets the shim of SQLiteCommand.get_Connection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ConnectionSetSQLiteConnection">
            <summary>Sets the shim of SQLiteCommand.set_Connection(SQLiteConnection value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CreateDbParameter">
            <summary>Sets the shim of SQLiteCommand.CreateDbParameter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.CreateParameter">
            <summary>Sets the shim of SQLiteCommand.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.DbConnectionGet">
            <summary>Sets the shim of SQLiteCommand.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.DbConnectionSetDbConnection">
            <summary>Sets the shim of SQLiteCommand.set_DbConnection(DbConnection value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.DbParameterCollectionGet">
            <summary>Sets the shim of SQLiteCommand.get_DbParameterCollection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.DbTransactionGet">
            <summary>Sets the shim of SQLiteCommand.get_DbTransaction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.DbTransactionSetDbTransaction">
            <summary>Sets the shim of SQLiteCommand.set_DbTransaction(DbTransaction value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.DesignTimeVisibleGet">
            <summary>Sets the shim of SQLiteCommand.get_DesignTimeVisible()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.DesignTimeVisibleSetBoolean">
            <summary>Sets the shim of SQLiteCommand.set_DesignTimeVisible(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteCommand.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ExecuteDbDataReaderCommandBehavior">
            <summary>Sets the shim of SQLiteCommand.ExecuteDbDataReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ExecuteNonQuery">
            <summary>Sets the shim of SQLiteCommand.ExecuteNonQuery()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ExecuteReader">
            <summary>Sets the shim of SQLiteCommand.ExecuteReader()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ExecuteReaderCommandBehavior">
            <summary>Sets the shim of SQLiteCommand.ExecuteReader(CommandBehavior behavior)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ExecuteScalar">
            <summary>Sets the shim of SQLiteCommand.ExecuteScalar()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.InitializeForReader">
            <summary>Sets the shim of SQLiteCommand.InitializeForReader()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.ParametersGet">
            <summary>Sets the shim of SQLiteCommand.get_Parameters()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.Prepare">
            <summary>Sets the shim of SQLiteCommand.Prepare()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.TransactionGet">
            <summary>Sets the shim of SQLiteCommand.get_Transaction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.TransactionSetSQLiteTransaction">
            <summary>Sets the shim of SQLiteCommand.set_Transaction(SQLiteTransaction value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.UpdatedRowSourceGet">
            <summary>Sets the shim of SQLiteCommand.get_UpdatedRowSource()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommand.AllInstances.UpdatedRowSourceSetUpdateRowSource">
            <summary>Sets the shim of SQLiteCommand.set_UpdatedRowSource(UpdateRowSource value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder">
            <summary>Shim type of System.Data.SQLite.SQLiteCommandBuilder</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.#ctor(System.Data.SQLite.SQLiteCommandBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.ApplyParameterInfoDbParameterDataRowStatementTypeBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.ApplyParameterInfo(DbParameter parameter, DataRow row, StatementType statementType, Boolean whereClause)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.CatalogLocationGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_CatalogLocation()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.CatalogLocationSetCatalogLocation">
            <summary>Sets the shim of SQLiteCommandBuilder.set_CatalogLocation(CatalogLocation value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.CatalogSeparatorGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_CatalogSeparator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.CatalogSeparatorSetString">
            <summary>Sets the shim of SQLiteCommandBuilder.set_CatalogSeparator(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.CheckDisposed">
            <summary>Sets the shim of SQLiteCommandBuilder.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.Constructor">
            <summary>Sets the shim of SQLiteCommandBuilder.SQLiteCommandBuilder()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.ConstructorSQLiteDataAdapter">
            <summary>Sets the shim of SQLiteCommandBuilder.SQLiteCommandBuilder(SQLiteDataAdapter adp)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.DataAdapterGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_DataAdapter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.DataAdapterSetSQLiteDataAdapter">
            <summary>Sets the shim of SQLiteCommandBuilder.set_DataAdapter(SQLiteDataAdapter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.DisposeBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetDeleteCommand">
            <summary>Sets the shim of SQLiteCommandBuilder.GetDeleteCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetDeleteCommandBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.GetDeleteCommand(Boolean useColumnsForParameterNames)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetInsertCommand">
            <summary>Sets the shim of SQLiteCommandBuilder.GetInsertCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetInsertCommandBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.GetInsertCommand(Boolean useColumnsForParameterNames)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetParameterNameInt32">
            <summary>Sets the shim of SQLiteCommandBuilder.GetParameterName(Int32 parameterOrdinal)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetParameterNameString">
            <summary>Sets the shim of SQLiteCommandBuilder.GetParameterName(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetParameterPlaceholderInt32">
            <summary>Sets the shim of SQLiteCommandBuilder.GetParameterPlaceholder(Int32 parameterOrdinal)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetSchemaTableDbCommand">
            <summary>Sets the shim of SQLiteCommandBuilder.GetSchemaTable(DbCommand sourceCommand)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetUpdateCommand">
            <summary>Sets the shim of SQLiteCommandBuilder.GetUpdateCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.GetUpdateCommandBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.GetUpdateCommand(Boolean useColumnsForParameterNames)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.HasSchemaPrimaryKeyDataTable">
            <summary>Sets the shim of SQLiteCommandBuilder.HasSchemaPrimaryKey(DataTable schema)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.QuoteIdentifierString">
            <summary>Sets the shim of SQLiteCommandBuilder.QuoteIdentifier(String unquotedIdentifier)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.QuotePrefixGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_QuotePrefix()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.QuotePrefixSetString">
            <summary>Sets the shim of SQLiteCommandBuilder.set_QuotePrefix(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.QuoteSuffixGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_QuoteSuffix()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.QuoteSuffixSetString">
            <summary>Sets the shim of SQLiteCommandBuilder.set_QuoteSuffix(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.ResetIsUniqueSchemaColumnDataTable">
            <summary>Sets the shim of SQLiteCommandBuilder.ResetIsUniqueSchemaColumn(DataTable schema)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.RowUpdatingEventHandlerObjectRowUpdatingEventArgs">
            <summary>Sets the shim of SQLiteCommandBuilder.RowUpdatingEventHandler(Object sender, RowUpdatingEventArgs e)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.SchemaSeparatorGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_SchemaSeparator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.SchemaSeparatorSetString">
            <summary>Sets the shim of SQLiteCommandBuilder.set_SchemaSeparator(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.SetRowUpdatingHandlerDbDataAdapter">
            <summary>Sets the shim of SQLiteCommandBuilder.SetRowUpdatingHandler(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.UnquoteIdentifierString">
            <summary>Sets the shim of SQLiteCommandBuilder.UnquoteIdentifier(String quotedIdentifier)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.ApplyParameterInfoDbParameterDataRowStatementTypeBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.ApplyParameterInfo(DbParameter parameter, DataRow row, StatementType statementType, Boolean whereClause)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.CatalogLocationGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_CatalogLocation()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.CatalogLocationSetCatalogLocation">
            <summary>Sets the shim of SQLiteCommandBuilder.set_CatalogLocation(CatalogLocation value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.CatalogSeparatorGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_CatalogSeparator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.CatalogSeparatorSetString">
            <summary>Sets the shim of SQLiteCommandBuilder.set_CatalogSeparator(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteCommandBuilder.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.DataAdapterGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_DataAdapter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.DataAdapterSetSQLiteDataAdapter">
            <summary>Sets the shim of SQLiteCommandBuilder.set_DataAdapter(SQLiteDataAdapter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetDeleteCommand">
            <summary>Sets the shim of SQLiteCommandBuilder.GetDeleteCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetDeleteCommandBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.GetDeleteCommand(Boolean useColumnsForParameterNames)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetInsertCommand">
            <summary>Sets the shim of SQLiteCommandBuilder.GetInsertCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetInsertCommandBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.GetInsertCommand(Boolean useColumnsForParameterNames)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetParameterNameInt32">
            <summary>Sets the shim of SQLiteCommandBuilder.GetParameterName(Int32 parameterOrdinal)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetParameterNameString">
            <summary>Sets the shim of SQLiteCommandBuilder.GetParameterName(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetParameterPlaceholderInt32">
            <summary>Sets the shim of SQLiteCommandBuilder.GetParameterPlaceholder(Int32 parameterOrdinal)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetSchemaTableDbCommand">
            <summary>Sets the shim of SQLiteCommandBuilder.GetSchemaTable(DbCommand sourceCommand)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetUpdateCommand">
            <summary>Sets the shim of SQLiteCommandBuilder.GetUpdateCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.GetUpdateCommandBoolean">
            <summary>Sets the shim of SQLiteCommandBuilder.GetUpdateCommand(Boolean useColumnsForParameterNames)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.HasSchemaPrimaryKeyDataTable">
            <summary>Sets the shim of SQLiteCommandBuilder.HasSchemaPrimaryKey(DataTable schema)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.QuoteIdentifierString">
            <summary>Sets the shim of SQLiteCommandBuilder.QuoteIdentifier(String unquotedIdentifier)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.QuotePrefixGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_QuotePrefix()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.QuotePrefixSetString">
            <summary>Sets the shim of SQLiteCommandBuilder.set_QuotePrefix(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.QuoteSuffixGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_QuoteSuffix()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.QuoteSuffixSetString">
            <summary>Sets the shim of SQLiteCommandBuilder.set_QuoteSuffix(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.ResetIsUniqueSchemaColumnDataTable">
            <summary>Sets the shim of SQLiteCommandBuilder.ResetIsUniqueSchemaColumn(DataTable schema)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.RowUpdatingEventHandlerObjectRowUpdatingEventArgs">
            <summary>Sets the shim of SQLiteCommandBuilder.RowUpdatingEventHandler(Object sender, RowUpdatingEventArgs e)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.SchemaSeparatorGet">
            <summary>Sets the shim of SQLiteCommandBuilder.get_SchemaSeparator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.SchemaSeparatorSetString">
            <summary>Sets the shim of SQLiteCommandBuilder.set_SchemaSeparator(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.SetRowUpdatingHandlerDbDataAdapter">
            <summary>Sets the shim of SQLiteCommandBuilder.SetRowUpdatingHandler(DbDataAdapter adapter)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteCommandBuilder.AllInstances.UnquoteIdentifierString">
            <summary>Sets the shim of SQLiteCommandBuilder.UnquoteIdentifier(String quotedIdentifier)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteConnection">
            <summary>Shim type of System.Data.SQLite.SQLiteConnection</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnection.#ctor(System.Data.SQLite.SQLiteConnection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnection.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnection.Bind(System.Data.IDbConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnection.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnection.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.BackupDatabaseSQLiteConnectionStringStringInt32SQLiteBackupCallbackInt32">
            <summary>Sets the shim of SQLiteConnection.BackupDatabase(SQLiteConnection destination, String destinationName, String sourceName, Int32 pages, SQLiteBackupCallback callback, Int32 retryMilliseconds)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.BeginDbTransactionIsolationLevel">
            <summary>Sets the shim of SQLiteConnection.BeginDbTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.BeginTransaction">
            <summary>Sets the shim of SQLiteConnection.BeginTransaction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.BeginTransactionBoolean">
            <summary>Sets the shim of SQLiteConnection.BeginTransaction(Boolean deferredLock)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.BeginTransactionIsolationLevel">
            <summary>Sets the shim of SQLiteConnection.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.BeginTransactionIsolationLevelBoolean">
            <summary>Sets the shim of SQLiteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferredLock)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.BindFunctionSQLiteFunctionAttributeSQLiteFunction">
            <summary>Sets the shim of SQLiteConnection.BindFunction(SQLiteFunctionAttribute functionAttribute, SQLiteFunction function)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Cancel">
            <summary>Sets the shim of SQLiteConnection.Cancel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ChangeDatabaseString">
            <summary>Sets the shim of SQLiteConnection.ChangeDatabase(String databaseName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ChangePasswordByteArray">
            <summary>Sets the shim of SQLiteConnection.ChangePassword(Byte[] newPassword)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ChangePasswordString">
            <summary>Sets the shim of SQLiteConnection.ChangePassword(String newPassword)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ChangedAddSQLiteConnectionEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_Changed(SQLiteConnectionEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ChangedRemoveSQLiteConnectionEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_Changed(SQLiteConnectionEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ChangesGet">
            <summary>Sets the shim of SQLiteConnection.get_Changes()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CheckDisposed">
            <summary>Sets the shim of SQLiteConnection.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CheckSQLiteConnection">
            <summary>Sets the shim of SQLiteConnection.Check(SQLiteConnection connection)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ClearAllPools">
            <summary>Sets the shim of SQLiteConnection.ClearAllPools()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ClearPoolSQLiteConnection">
            <summary>Sets the shim of SQLiteConnection.ClearPool(SQLiteConnection connection)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Clone">
            <summary>Sets the shim of SQLiteConnection.Clone()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Close">
            <summary>Sets the shim of SQLiteConnection.Close()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CommitAddSQLiteCommitHandler">
            <summary>Sets the shim of SQLiteConnection.add_Commit(SQLiteCommitHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CommitCallbackIntPtr">
            <summary>Sets the shim of SQLiteConnection.CommitCallback(IntPtr parg)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CommitRemoveSQLiteCommitHandler">
            <summary>Sets the shim of SQLiteConnection.remove_Commit(SQLiteCommitHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ConnectionPoolGet">
            <summary>Sets the shim of SQLiteConnection.get_ConnectionPool()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ConnectionPoolSetISQLiteConnectionPool">
            <summary>Sets the shim of SQLiteConnection.set_ConnectionPool(ISQLiteConnectionPool value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ConnectionStringGet">
            <summary>Sets the shim of SQLiteConnection.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ConnectionStringSetString">
            <summary>Sets the shim of SQLiteConnection.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Constructor">
            <summary>Sets the shim of SQLiteConnection.SQLiteConnection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ConstructorIntPtrStringBoolean">
            <summary>Sets the shim of SQLiteConnection.SQLiteConnection(IntPtr db, String fileName, Boolean ownHandle)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ConstructorSQLiteConnection">
            <summary>Sets the shim of SQLiteConnection.SQLiteConnection(SQLiteConnection connection)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ConstructorString">
            <summary>Sets the shim of SQLiteConnection.SQLiteConnection(String connectionString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ConstructorStringBoolean">
            <summary>Sets the shim of SQLiteConnection.SQLiteConnection(String connectionString, Boolean parseViaFramework)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CreateCommand">
            <summary>Sets the shim of SQLiteConnection.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CreateDbCommand">
            <summary>Sets the shim of SQLiteConnection.CreateDbCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CreateFileString">
            <summary>Sets the shim of SQLiteConnection.CreateFile(String databaseFileName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CreateHandleIntPtr">
            <summary>Sets the shim of SQLiteConnection.CreateHandle(IntPtr nativeHandle)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.CreateModuleSQLiteModule">
            <summary>Sets the shim of SQLiteConnection.CreateModule(SQLiteModule module)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.DataSourceGet">
            <summary>Sets the shim of SQLiteConnection.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.DatabaseGet">
            <summary>Sets the shim of SQLiteConnection.get_Database()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.DbProviderFactoryGet">
            <summary>Sets the shim of SQLiteConnection.get_DbProviderFactory()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.DefaultTimeoutGet">
            <summary>Sets the shim of SQLiteConnection.get_DefaultTimeout()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.DefaultTimeoutSetInt32">
            <summary>Sets the shim of SQLiteConnection.set_DefaultTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.DefineConstantsGet">
            <summary>Sets the shim of SQLiteConnection.get_DefineConstants()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.DisposeBoolean">
            <summary>Sets the shim of SQLiteConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.EnableExtensionsBoolean">
            <summary>Sets the shim of SQLiteConnection.EnableExtensions(Boolean enable)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.EnlistTransactionTransaction">
            <summary>Sets the shim of SQLiteConnection.EnlistTransaction(Transaction transaction)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ExpandFileNameStringBoolean">
            <summary>Sets the shim of SQLiteConnection.ExpandFileName(String sourceFile, Boolean toFullPath)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ExtendedResultCode">
            <summary>Sets the shim of SQLiteConnection.ExtendedResultCode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.FindKeySortedListOfStringStringStringString">
            <summary>Sets the shim of SQLiteConnection.FindKey(SortedList`2&lt;String,String&gt; items, String key, String defValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.FlagsGet">
            <summary>Sets the shim of SQLiteConnection.get_Flags()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.FlagsSetSQLiteConnectionFlags">
            <summary>Sets the shim of SQLiteConnection.set_Flags(SQLiteConnectionFlags value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.FromHexStringString">
            <summary>Sets the shim of SQLiteConnection.FromHexString(String text)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.FromHexStringStringStringRef">
            <summary>Sets the shim of SQLiteConnection.FromHexString(String text, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.GetSchema">
            <summary>Sets the shim of SQLiteConnection.GetSchema()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.GetSchemaString">
            <summary>Sets the shim of SQLiteConnection.GetSchema(String collectionName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.GetSchemaStringStringArray">
            <summary>Sets the shim of SQLiteConnection.GetSchema(String collectionName, String[] restrictionValues)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.LastInsertRowIdGet">
            <summary>Sets the shim of SQLiteConnection.get_LastInsertRowId()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.LoadExtensionString">
            <summary>Sets the shim of SQLiteConnection.LoadExtension(String fileName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.LoadExtensionStringString">
            <summary>Sets the shim of SQLiteConnection.LoadExtension(String fileName, String procName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.LogMessageInt32String">
            <summary>Sets the shim of SQLiteConnection.LogMessage(Int32 iErrCode, String zMessage)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.LogMessageSQLiteErrorCodeString">
            <summary>Sets the shim of SQLiteConnection.LogMessage(SQLiteErrorCode iErrCode, String zMessage)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.MapUriPathString">
            <summary>Sets the shim of SQLiteConnection.MapUriPath(String path)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.MemoryHighwaterGet">
            <summary>Sets the shim of SQLiteConnection.get_MemoryHighwater()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.MemoryUsedGet">
            <summary>Sets the shim of SQLiteConnection.get_MemoryUsed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.OnChangedSQLiteConnectionConnectionEventArgs">
            <summary>Sets the shim of SQLiteConnection.OnChanged(SQLiteConnection connection, ConnectionEventArgs e)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.OnStateChangeConnectionStateStateChangeEventArgsRef">
            <summary>Sets the shim of SQLiteConnection.OnStateChange(ConnectionState newState, StateChangeEventArgs&amp; eventArgs)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Open">
            <summary>Sets the shim of SQLiteConnection.Open()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.OpenAndReturn">
            <summary>Sets the shim of SQLiteConnection.OpenAndReturn()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.OwnHandleGet">
            <summary>Sets the shim of SQLiteConnection.get_OwnHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ParseConnectionStringString">
            <summary>Sets the shim of SQLiteConnection.ParseConnectionString(String connectionString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ParseConnectionStringStringBoolean">
            <summary>Sets the shim of SQLiteConnection.ParseConnectionString(String connectionString, Boolean parseViaFramework)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ParseConnectionStringViaFrameworkStringBoolean">
            <summary>Sets the shim of SQLiteConnection.ParseConnectionStringViaFramework(String connectionString, Boolean strict)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ParseViaFrameworkGet">
            <summary>Sets the shim of SQLiteConnection.get_ParseViaFramework()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ParseViaFrameworkSetBoolean">
            <summary>Sets the shim of SQLiteConnection.set_ParseViaFramework(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.PoolCountGet">
            <summary>Sets the shim of SQLiteConnection.get_PoolCount()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ResultCode">
            <summary>Sets the shim of SQLiteConnection.ResultCode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.RollBackAddEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_RollBack(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.RollBackRemoveEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_RollBack(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.RollbackCallbackIntPtr">
            <summary>Sets the shim of SQLiteConnection.RollbackCallback(IntPtr parg)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.SQLiteSourceIdGet">
            <summary>Sets the shim of SQLiteConnection.get_SQLiteSourceId()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.SQLiteVersionGet">
            <summary>Sets the shim of SQLiteConnection.get_SQLiteVersion()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_CatalogsString">
            <summary>Sets the shim of SQLiteConnection.Schema_Catalogs(String strCatalog)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_ColumnsStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Columns(String strCatalog, String strTable, String strColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_DataSourceInformation">
            <summary>Sets the shim of SQLiteConnection.Schema_DataSourceInformation()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_DataTypes">
            <summary>Sets the shim of SQLiteConnection.Schema_DataTypes()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_ForeignKeysStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_ForeignKeys(String strCatalog, String strTable, String strKeyName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_IndexColumnsStringStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_IndexColumns(String strCatalog, String strTable, String strIndex, String strColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_IndexesStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Indexes(String strCatalog, String strTable, String strIndex)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_MetaDataCollections">
            <summary>Sets the shim of SQLiteConnection.Schema_MetaDataCollections()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_ReservedWords">
            <summary>Sets the shim of SQLiteConnection.Schema_ReservedWords()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_TablesStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Tables(String strCatalog, String strTable, String strType)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_TriggersStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Triggers(String catalog, String table, String triggerName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_ViewColumnsStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_ViewColumns(String strCatalog, String strView, String strColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Schema_ViewsStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Views(String strCatalog, String strView)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ServerVersionGet">
            <summary>Sets the shim of SQLiteConnection.get_ServerVersion()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.SetAvRetryInt32RefInt32Ref">
            <summary>Sets the shim of SQLiteConnection.SetAvRetry(Int32&amp; count, Int32&amp; interval)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.SetExtendedResultCodesBoolean">
            <summary>Sets the shim of SQLiteConnection.SetExtendedResultCodes(Boolean bOnOff)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.SetMemoryStatusBoolean">
            <summary>Sets the shim of SQLiteConnection.SetMemoryStatus(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.SetPasswordByteArray">
            <summary>Sets the shim of SQLiteConnection.SetPassword(Byte[] databasePassword)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.SetPasswordString">
            <summary>Sets the shim of SQLiteConnection.SetPassword(String databasePassword)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.SetupSQLiteBaseSortedListOfStringString">
            <summary>Sets the shim of SQLiteConnection.SetupSQLiteBase(SortedList`2&lt;String,String&gt; opts)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.Shutdown">
            <summary>Sets the shim of SQLiteConnection.Shutdown()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.StateChangeAddStateChangeEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_StateChange(StateChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.StateChangeRemoveStateChangeEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_StateChange(StateChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.StateGet">
            <summary>Sets the shim of SQLiteConnection.get_State()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.StaticConstructor">
            <summary>Sets the shim of SQLiteConnection.SQLiteConnection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.ToHexStringByteArray">
            <summary>Sets the shim of SQLiteConnection.ToHexString(Byte[] array)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.TraceAddSQLiteTraceEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_Trace(SQLiteTraceEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.TraceCallbackIntPtrIntPtr">
            <summary>Sets the shim of SQLiteConnection.TraceCallback(IntPtr puser, IntPtr statement)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.TraceRemoveSQLiteTraceEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_Trace(SQLiteTraceEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.UnwrapStringString">
            <summary>Sets the shim of SQLiteConnection.UnwrapString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.UpdateAddSQLiteUpdateEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_Update(SQLiteUpdateEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.UpdateCallbackIntPtrInt32IntPtrIntPtrInt64">
            <summary>Sets the shim of SQLiteConnection.UpdateCallback(IntPtr puser, Int32 type, IntPtr database, IntPtr table, Int64 rowid)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.UpdateRemoveSQLiteUpdateEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_Update(SQLiteUpdateEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._commitHandlerAddSQLiteCommitHandler">
            <summary>Sets the shim of SQLiteConnection.add__commitHandler(SQLiteCommitHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._commitHandlerRemoveSQLiteCommitHandler">
            <summary>Sets the shim of SQLiteConnection.remove__commitHandler(SQLiteCommitHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._handlersAddSQLiteConnectionEventHandler">
            <summary>Sets the shim of SQLiteConnection.add__handlers(SQLiteConnectionEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._handlersRemoveSQLiteConnectionEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove__handlers(SQLiteConnectionEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._rollbackHandlerAddEventHandler">
            <summary>Sets the shim of SQLiteConnection.add__rollbackHandler(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._rollbackHandlerRemoveEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove__rollbackHandler(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._traceHandlerAddSQLiteTraceEventHandler">
            <summary>Sets the shim of SQLiteConnection.add__traceHandler(SQLiteTraceEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._traceHandlerRemoveSQLiteTraceEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove__traceHandler(SQLiteTraceEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._updateHandlerAddSQLiteUpdateEventHandler">
            <summary>Sets the shim of SQLiteConnection.add__updateHandler(SQLiteUpdateEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection._updateHandlerRemoveSQLiteUpdateEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove__updateHandler(SQLiteUpdateEventHandler value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.BackupDatabaseSQLiteConnectionStringStringInt32SQLiteBackupCallbackInt32">
            <summary>Sets the shim of SQLiteConnection.BackupDatabase(SQLiteConnection destination, String destinationName, String sourceName, Int32 pages, SQLiteBackupCallback callback, Int32 retryMilliseconds)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.BeginDbTransactionIsolationLevel">
            <summary>Sets the shim of SQLiteConnection.BeginDbTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.BeginTransaction">
            <summary>Sets the shim of SQLiteConnection.BeginTransaction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.BeginTransactionBoolean">
            <summary>Sets the shim of SQLiteConnection.BeginTransaction(Boolean deferredLock)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.BeginTransactionIsolationLevel">
            <summary>Sets the shim of SQLiteConnection.BeginTransaction(IsolationLevel isolationLevel)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.BeginTransactionIsolationLevelBoolean">
            <summary>Sets the shim of SQLiteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferredLock)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.BindFunctionSQLiteFunctionAttributeSQLiteFunction">
            <summary>Sets the shim of SQLiteConnection.BindFunction(SQLiteFunctionAttribute functionAttribute, SQLiteFunction function)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Cancel">
            <summary>Sets the shim of SQLiteConnection.Cancel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ChangeDatabaseString">
            <summary>Sets the shim of SQLiteConnection.ChangeDatabase(String databaseName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ChangePasswordByteArray">
            <summary>Sets the shim of SQLiteConnection.ChangePassword(Byte[] newPassword)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ChangePasswordString">
            <summary>Sets the shim of SQLiteConnection.ChangePassword(String newPassword)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ChangesGet">
            <summary>Sets the shim of SQLiteConnection.get_Changes()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteConnection.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Clone">
            <summary>Sets the shim of SQLiteConnection.Clone()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Close">
            <summary>Sets the shim of SQLiteConnection.Close()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.CommitAddSQLiteCommitHandler">
            <summary>Sets the shim of SQLiteConnection.add_Commit(SQLiteCommitHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.CommitCallbackIntPtr">
            <summary>Sets the shim of SQLiteConnection.CommitCallback(IntPtr parg)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.CommitRemoveSQLiteCommitHandler">
            <summary>Sets the shim of SQLiteConnection.remove_Commit(SQLiteCommitHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ConnectionStringGet">
            <summary>Sets the shim of SQLiteConnection.get_ConnectionString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ConnectionStringSetString">
            <summary>Sets the shim of SQLiteConnection.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.CreateCommand">
            <summary>Sets the shim of SQLiteConnection.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.CreateDbCommand">
            <summary>Sets the shim of SQLiteConnection.CreateDbCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.CreateModuleSQLiteModule">
            <summary>Sets the shim of SQLiteConnection.CreateModule(SQLiteModule module)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.DataSourceGet">
            <summary>Sets the shim of SQLiteConnection.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.DatabaseGet">
            <summary>Sets the shim of SQLiteConnection.get_Database()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.DbProviderFactoryGet">
            <summary>Sets the shim of SQLiteConnection.get_DbProviderFactory()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.DefaultTimeoutGet">
            <summary>Sets the shim of SQLiteConnection.get_DefaultTimeout()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.DefaultTimeoutSetInt32">
            <summary>Sets the shim of SQLiteConnection.set_DefaultTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteConnection.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.EnableExtensionsBoolean">
            <summary>Sets the shim of SQLiteConnection.EnableExtensions(Boolean enable)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.EnlistTransactionTransaction">
            <summary>Sets the shim of SQLiteConnection.EnlistTransaction(Transaction transaction)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ExpandFileNameStringBoolean">
            <summary>Sets the shim of SQLiteConnection.ExpandFileName(String sourceFile, Boolean toFullPath)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ExtendedResultCode">
            <summary>Sets the shim of SQLiteConnection.ExtendedResultCode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.FlagsGet">
            <summary>Sets the shim of SQLiteConnection.get_Flags()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.FlagsSetSQLiteConnectionFlags">
            <summary>Sets the shim of SQLiteConnection.set_Flags(SQLiteConnectionFlags value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.GetSchema">
            <summary>Sets the shim of SQLiteConnection.GetSchema()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.GetSchemaString">
            <summary>Sets the shim of SQLiteConnection.GetSchema(String collectionName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.GetSchemaStringStringArray">
            <summary>Sets the shim of SQLiteConnection.GetSchema(String collectionName, String[] restrictionValues)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.LastInsertRowIdGet">
            <summary>Sets the shim of SQLiteConnection.get_LastInsertRowId()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.LoadExtensionString">
            <summary>Sets the shim of SQLiteConnection.LoadExtension(String fileName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.LoadExtensionStringString">
            <summary>Sets the shim of SQLiteConnection.LoadExtension(String fileName, String procName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.LogMessageInt32String">
            <summary>Sets the shim of SQLiteConnection.LogMessage(Int32 iErrCode, String zMessage)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.LogMessageSQLiteErrorCodeString">
            <summary>Sets the shim of SQLiteConnection.LogMessage(SQLiteErrorCode iErrCode, String zMessage)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.MemoryHighwaterGet">
            <summary>Sets the shim of SQLiteConnection.get_MemoryHighwater()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.MemoryUsedGet">
            <summary>Sets the shim of SQLiteConnection.get_MemoryUsed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.OnStateChangeConnectionStateStateChangeEventArgsRef">
            <summary>Sets the shim of SQLiteConnection.OnStateChange(ConnectionState newState, StateChangeEventArgs&amp; eventArgs)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Open">
            <summary>Sets the shim of SQLiteConnection.Open()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.OpenAndReturn">
            <summary>Sets the shim of SQLiteConnection.OpenAndReturn()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.OwnHandleGet">
            <summary>Sets the shim of SQLiteConnection.get_OwnHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ParseViaFrameworkGet">
            <summary>Sets the shim of SQLiteConnection.get_ParseViaFramework()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ParseViaFrameworkSetBoolean">
            <summary>Sets the shim of SQLiteConnection.set_ParseViaFramework(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.PoolCountGet">
            <summary>Sets the shim of SQLiteConnection.get_PoolCount()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ResultCode">
            <summary>Sets the shim of SQLiteConnection.ResultCode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.RollBackAddEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_RollBack(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.RollBackRemoveEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_RollBack(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.RollbackCallbackIntPtr">
            <summary>Sets the shim of SQLiteConnection.RollbackCallback(IntPtr parg)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_CatalogsString">
            <summary>Sets the shim of SQLiteConnection.Schema_Catalogs(String strCatalog)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_ColumnsStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Columns(String strCatalog, String strTable, String strColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_DataSourceInformation">
            <summary>Sets the shim of SQLiteConnection.Schema_DataSourceInformation()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_DataTypes">
            <summary>Sets the shim of SQLiteConnection.Schema_DataTypes()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_ForeignKeysStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_ForeignKeys(String strCatalog, String strTable, String strKeyName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_IndexColumnsStringStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_IndexColumns(String strCatalog, String strTable, String strIndex, String strColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_IndexesStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Indexes(String strCatalog, String strTable, String strIndex)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_TablesStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Tables(String strCatalog, String strTable, String strType)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_TriggersStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Triggers(String catalog, String table, String triggerName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_ViewColumnsStringStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_ViewColumns(String strCatalog, String strView, String strColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Schema_ViewsStringString">
            <summary>Sets the shim of SQLiteConnection.Schema_Views(String strCatalog, String strView)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.ServerVersionGet">
            <summary>Sets the shim of SQLiteConnection.get_ServerVersion()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.SetAvRetryInt32RefInt32Ref">
            <summary>Sets the shim of SQLiteConnection.SetAvRetry(Int32&amp; count, Int32&amp; interval)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.SetExtendedResultCodesBoolean">
            <summary>Sets the shim of SQLiteConnection.SetExtendedResultCodes(Boolean bOnOff)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.SetPasswordByteArray">
            <summary>Sets the shim of SQLiteConnection.SetPassword(Byte[] databasePassword)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.SetPasswordString">
            <summary>Sets the shim of SQLiteConnection.SetPassword(String databasePassword)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.SetupSQLiteBaseSortedListOfStringString">
            <summary>Sets the shim of SQLiteConnection.SetupSQLiteBase(SortedList`2&lt;String,String&gt; opts)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.Shutdown">
            <summary>Sets the shim of SQLiteConnection.Shutdown()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.StateChangeAddStateChangeEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_StateChange(StateChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.StateChangeRemoveStateChangeEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_StateChange(StateChangeEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.StateGet">
            <summary>Sets the shim of SQLiteConnection.get_State()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.TraceAddSQLiteTraceEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_Trace(SQLiteTraceEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.TraceCallbackIntPtrIntPtr">
            <summary>Sets the shim of SQLiteConnection.TraceCallback(IntPtr puser, IntPtr statement)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.TraceRemoveSQLiteTraceEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_Trace(SQLiteTraceEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.UpdateAddSQLiteUpdateEventHandler">
            <summary>Sets the shim of SQLiteConnection.add_Update(SQLiteUpdateEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.UpdateCallbackIntPtrInt32IntPtrIntPtrInt64">
            <summary>Sets the shim of SQLiteConnection.UpdateCallback(IntPtr puser, Int32 type, IntPtr database, IntPtr table, Int64 rowid)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances.UpdateRemoveSQLiteUpdateEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove_Update(SQLiteUpdateEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances._commitHandlerAddSQLiteCommitHandler">
            <summary>Sets the shim of SQLiteConnection.add__commitHandler(SQLiteCommitHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances._commitHandlerRemoveSQLiteCommitHandler">
            <summary>Sets the shim of SQLiteConnection.remove__commitHandler(SQLiteCommitHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances._rollbackHandlerAddEventHandler">
            <summary>Sets the shim of SQLiteConnection.add__rollbackHandler(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances._rollbackHandlerRemoveEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove__rollbackHandler(EventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances._traceHandlerAddSQLiteTraceEventHandler">
            <summary>Sets the shim of SQLiteConnection.add__traceHandler(SQLiteTraceEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances._traceHandlerRemoveSQLiteTraceEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove__traceHandler(SQLiteTraceEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances._updateHandlerAddSQLiteUpdateEventHandler">
            <summary>Sets the shim of SQLiteConnection.add__updateHandler(SQLiteUpdateEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnection.AllInstances._updateHandlerRemoveSQLiteUpdateEventHandler">
            <summary>Sets the shim of SQLiteConnection.remove__updateHandler(SQLiteUpdateEventHandler value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder">
            <summary>Shim type of System.Data.SQLite.SQLiteConnectionStringBuilder</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.#ctor(System.Data.SQLite.SQLiteConnectionStringBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.Bind(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.BaseSchemaNameGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_BaseSchemaName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.BaseSchemaNameSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_BaseSchemaName(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.BinaryGUIDGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_BinaryGUID()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.BinaryGUIDSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_BinaryGUID(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.CacheSizeGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_CacheSize()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.CacheSizeSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_CacheSize(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.Constructor">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.SQLiteConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.ConstructorString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.SQLiteConnectionStringBuilder(String connectionString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DataSourceGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DataSourceSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DataSource(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DateTimeFormatGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DateTimeFormat()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DateTimeFormatSetSQLiteDateFormats">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DateTimeFormat(SQLiteDateFormats value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DateTimeFormatStringGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DateTimeFormatString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DateTimeFormatStringSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DateTimeFormatString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DateTimeKindGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DateTimeKind()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DateTimeKindSetDateTimeKind">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DateTimeKind(DateTimeKind value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DefaultIsolationLevelGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DefaultIsolationLevel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DefaultIsolationLevelSetIsolationLevel">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DefaultIsolationLevel(IsolationLevel value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DefaultTimeoutGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DefaultTimeout()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.DefaultTimeoutSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DefaultTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.EnlistGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Enlist()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.EnlistSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Enlist(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.FailIfMissingGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_FailIfMissing()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.FailIfMissingSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_FailIfMissing(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.FallbackGetPropertiesHashtable">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.FallbackGetProperties(Hashtable propertyList)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.FlagsGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Flags()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.FlagsSetSQLiteConnectionFlags">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Flags(SQLiteConnectionFlags value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.ForeignKeysGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_ForeignKeys()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.ForeignKeysSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_ForeignKeys(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.FullUriGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_FullUri()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.FullUriSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_FullUri(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.HexPasswordGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_HexPassword()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.HexPasswordSetByteArray">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_HexPassword(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.InitializeString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.Initialize(String cnnString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.JournalModeGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_JournalMode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.JournalModeSetSQLiteJournalModeEnum">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_JournalMode(SQLiteJournalModeEnum value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.LegacyFormatGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_LegacyFormat()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.LegacyFormatSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_LegacyFormat(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.MaxPageCountGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_MaxPageCount()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.MaxPageCountSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_MaxPageCount(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.PageSizeGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_PageSize()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.PageSizeSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.PasswordGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Password()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.PasswordSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Password(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.PoolingGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Pooling()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.PoolingSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Pooling(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.ReadOnlyGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_ReadOnly()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.ReadOnlySetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_ReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.SetDefaultsGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_SetDefaults()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.SetDefaultsSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_SetDefaults(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.SyncModeGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_SyncMode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.SyncModeSetSynchronizationModes">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_SyncMode(SynchronizationModes value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.ToFullPathGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_ToFullPath()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.ToFullPathSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_ToFullPath(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.TryGetValueStringObjectOut">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.TryGetValue(String keyword, Object&amp; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.UriGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Uri()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.UriSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Uri(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.UseUTF16EncodingGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_UseUTF16Encoding()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.UseUTF16EncodingSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_UseUTF16Encoding(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.VersionGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Version()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.VersionSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Version(Int32 value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.BaseSchemaNameGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_BaseSchemaName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.BaseSchemaNameSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_BaseSchemaName(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.BinaryGUIDGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_BinaryGUID()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.BinaryGUIDSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_BinaryGUID(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.CacheSizeGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_CacheSize()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.CacheSizeSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_CacheSize(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DataSourceGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DataSource()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DataSourceSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DataSource(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DateTimeFormatGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DateTimeFormat()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DateTimeFormatSetSQLiteDateFormats">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DateTimeFormat(SQLiteDateFormats value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DateTimeFormatStringGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DateTimeFormatString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DateTimeFormatStringSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DateTimeFormatString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DateTimeKindGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DateTimeKind()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DateTimeKindSetDateTimeKind">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DateTimeKind(DateTimeKind value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DefaultIsolationLevelGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DefaultIsolationLevel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DefaultIsolationLevelSetIsolationLevel">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DefaultIsolationLevel(IsolationLevel value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DefaultTimeoutGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_DefaultTimeout()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.DefaultTimeoutSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_DefaultTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.EnlistGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Enlist()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.EnlistSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Enlist(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.FailIfMissingGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_FailIfMissing()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.FailIfMissingSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_FailIfMissing(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.FallbackGetPropertiesHashtable">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.FallbackGetProperties(Hashtable propertyList)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.FlagsGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Flags()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.FlagsSetSQLiteConnectionFlags">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Flags(SQLiteConnectionFlags value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.ForeignKeysGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_ForeignKeys()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.ForeignKeysSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_ForeignKeys(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.FullUriGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_FullUri()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.FullUriSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_FullUri(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.HexPasswordGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_HexPassword()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.HexPasswordSetByteArray">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_HexPassword(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.InitializeString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.Initialize(String cnnString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.JournalModeGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_JournalMode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.JournalModeSetSQLiteJournalModeEnum">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_JournalMode(SQLiteJournalModeEnum value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.LegacyFormatGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_LegacyFormat()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.LegacyFormatSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_LegacyFormat(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.MaxPageCountGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_MaxPageCount()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.MaxPageCountSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_MaxPageCount(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.PageSizeGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_PageSize()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.PageSizeSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_PageSize(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.PasswordGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Password()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.PasswordSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Password(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.PoolingGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Pooling()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.PoolingSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Pooling(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.ReadOnlyGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_ReadOnly()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.ReadOnlySetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_ReadOnly(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.SetDefaultsGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_SetDefaults()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.SetDefaultsSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_SetDefaults(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.SyncModeGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_SyncMode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.SyncModeSetSynchronizationModes">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_SyncMode(SynchronizationModes value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.ToFullPathGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_ToFullPath()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.ToFullPathSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_ToFullPath(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.TryGetValueStringObjectOut">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.TryGetValue(String keyword, Object&amp; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.UriGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Uri()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.UriSetString">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Uri(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.UseUTF16EncodingGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_UseUTF16Encoding()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.UseUTF16EncodingSetBoolean">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_UseUTF16Encoding(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.VersionGet">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.get_Version()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConnectionStringBuilder.AllInstances.VersionSetInt32">
            <summary>Sets the shim of SQLiteConnectionStringBuilder.set_Version(Int32 value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteContext">
            <summary>Shim type of System.Data.SQLite.SQLiteContext</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteContext.#ctor(System.Data.SQLite.SQLiteContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteContext.Bind(System.Data.SQLite.ISQLiteNativeHandle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.ConstructorIntPtr">
            <summary>Sets the shim of SQLiteContext.SQLiteContext(IntPtr pContext)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.NativeHandleGet">
            <summary>Sets the shim of SQLiteContext.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetBlobByteArray">
            <summary>Sets the shim of SQLiteContext.SetBlob(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetDoubleDouble">
            <summary>Sets the shim of SQLiteContext.SetDouble(Double value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetErrorCodeSQLiteErrorCode">
            <summary>Sets the shim of SQLiteContext.SetErrorCode(SQLiteErrorCode value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetErrorNoMemory">
            <summary>Sets the shim of SQLiteContext.SetErrorNoMemory()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetErrorString">
            <summary>Sets the shim of SQLiteContext.SetError(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetErrorTooBig">
            <summary>Sets the shim of SQLiteContext.SetErrorTooBig()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetInt64Int64">
            <summary>Sets the shim of SQLiteContext.SetInt64(Int64 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetIntInt32">
            <summary>Sets the shim of SQLiteContext.SetInt(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetNull">
            <summary>Sets the shim of SQLiteContext.SetNull()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetStringString">
            <summary>Sets the shim of SQLiteContext.SetString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetValueSQLiteValue">
            <summary>Sets the shim of SQLiteContext.SetValue(SQLiteValue value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.SetZeroBlobInt32">
            <summary>Sets the shim of SQLiteContext.SetZeroBlob(Int32 value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.NativeHandleGet">
            <summary>Sets the shim of SQLiteContext.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetBlobByteArray">
            <summary>Sets the shim of SQLiteContext.SetBlob(Byte[] value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetDoubleDouble">
            <summary>Sets the shim of SQLiteContext.SetDouble(Double value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetErrorCodeSQLiteErrorCode">
            <summary>Sets the shim of SQLiteContext.SetErrorCode(SQLiteErrorCode value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetErrorNoMemory">
            <summary>Sets the shim of SQLiteContext.SetErrorNoMemory()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetErrorString">
            <summary>Sets the shim of SQLiteContext.SetError(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetErrorTooBig">
            <summary>Sets the shim of SQLiteContext.SetErrorTooBig()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetInt64Int64">
            <summary>Sets the shim of SQLiteContext.SetInt64(Int64 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetIntInt32">
            <summary>Sets the shim of SQLiteContext.SetInt(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetNull">
            <summary>Sets the shim of SQLiteContext.SetNull()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetStringString">
            <summary>Sets the shim of SQLiteContext.SetString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetValueSQLiteValue">
            <summary>Sets the shim of SQLiteContext.SetValue(SQLiteValue value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteContext.AllInstances.SetZeroBlobInt32">
            <summary>Sets the shim of SQLiteContext.SetZeroBlob(Int32 value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteConvert">
            <summary>Shim type of System.Data.SQLite.SQLiteConvert</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConvert.#ctor(System.Data.SQLite.SQLiteConvert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConvert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteConvert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ConstructorSQLiteDateFormatsDateTimeKindString">
            <summary>Sets the shim of SQLiteConvert.SQLiteConvert(SQLiteDateFormats fmt, DateTimeKind kind, String fmtString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.DbTypeToColumnSizeDbType">
            <summary>Sets the shim of SQLiteConvert.DbTypeToColumnSize(DbType typ)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.DbTypeToNumericPrecisionDbType">
            <summary>Sets the shim of SQLiteConvert.DbTypeToNumericPrecision(DbType typ)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.DbTypeToNumericScaleDbType">
            <summary>Sets the shim of SQLiteConvert.DbTypeToNumericScale(DbType typ)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.DbTypeToTypeNameDbType">
            <summary>Sets the shim of SQLiteConvert.DbTypeToTypeName(DbType typ)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.GetDateTimeKindFormatDateTimeKindString">
            <summary>Sets the shim of SQLiteConvert.GetDateTimeKindFormat(DateTimeKind kind, String formatString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.NewSplitStringCharBooleanStringRef">
            <summary>Sets the shim of SQLiteConvert.NewSplit(String value, Char separator, Boolean keepQuote, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.SplitStringChar">
            <summary>Sets the shim of SQLiteConvert.Split(String source, Char separator)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.StaticConstructor">
            <summary>Sets the shim of SQLiteConvert.SQLiteConvert()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToBooleanObject">
            <summary>Sets the shim of SQLiteConvert.ToBoolean(Object source)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToBooleanString">
            <summary>Sets the shim of SQLiteConvert.ToBoolean(String source)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToDateTimeDouble">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(Double julianDay)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToDateTimeDoubleDateTimeKind">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(Double julianDay, DateTimeKind kind)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToDateTimeInt32DateTimeKind">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(Int32 seconds, DateTimeKind kind)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToDateTimeInt64DateTimeKind">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(Int64 ticks, DateTimeKind kind)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToDateTimeIntPtrInt32">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(IntPtr ptr, Int32 len)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToDateTimeString">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(String dateText)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToDateTimeStringSQLiteDateFormatsDateTimeKindString">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(String dateText, SQLiteDateFormats format, DateTimeKind kind, String formatString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToJulianDayDateTime">
            <summary>Sets the shim of SQLiteConvert.ToJulianDay(DateTime value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToStringDateTime">
            <summary>Sets the shim of SQLiteConvert.ToString(DateTime dateValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToStringIntPtrInt32">
            <summary>Sets the shim of SQLiteConvert.ToString(IntPtr nativestring, Int32 nativestringlen)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToUTF8DateTime">
            <summary>Sets the shim of SQLiteConvert.ToUTF8(DateTime dateTimeValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToUTF8String">
            <summary>Sets the shim of SQLiteConvert.ToUTF8(String sourceText)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.ToUnixEpochDateTime">
            <summary>Sets the shim of SQLiteConvert.ToUnixEpoch(DateTime value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.TypeNameToDbTypeString">
            <summary>Sets the shim of SQLiteConvert.TypeNameToDbType(String Name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.UTF8ToStringIntPtrInt32">
            <summary>Sets the shim of SQLiteConvert.UTF8ToString(IntPtr nativestring, Int32 nativestringlen)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteConvert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.AllInstances.ToDateTimeDouble">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(Double julianDay)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.AllInstances.ToDateTimeIntPtrInt32">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(IntPtr ptr, Int32 len)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.AllInstances.ToDateTimeString">
            <summary>Sets the shim of SQLiteConvert.ToDateTime(String dateText)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.AllInstances.ToStringDateTime">
            <summary>Sets the shim of SQLiteConvert.ToString(DateTime dateValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.AllInstances.ToStringIntPtrInt32">
            <summary>Sets the shim of SQLiteConvert.ToString(IntPtr nativestring, Int32 nativestringlen)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteConvert.AllInstances.ToUTF8DateTime">
            <summary>Sets the shim of SQLiteConvert.ToUTF8(DateTime dateTimeValue)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter">
            <summary>Shim type of System.Data.SQLite.SQLiteDataAdapter</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.#ctor(System.Data.SQLite.SQLiteDataAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.Bind(System.ComponentModel.IComponent)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.Bind(System.Data.IDataAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.Bind(System.Data.IDbDataAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.CheckDisposed">
            <summary>Sets the shim of SQLiteDataAdapter.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.Constructor">
            <summary>Sets the shim of SQLiteDataAdapter.SQLiteDataAdapter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.ConstructorSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.SQLiteDataAdapter(SQLiteCommand cmd)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.ConstructorStringSQLiteConnection">
            <summary>Sets the shim of SQLiteDataAdapter.SQLiteDataAdapter(String commandText, SQLiteConnection connection)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.ConstructorStringString">
            <summary>Sets the shim of SQLiteDataAdapter.SQLiteDataAdapter(String commandText, String connectionString)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.ConstructorStringStringBoolean">
            <summary>Sets the shim of SQLiteDataAdapter.SQLiteDataAdapter(String commandText, String connectionString, Boolean parseViaFramework)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.DeleteCommandGet">
            <summary>Sets the shim of SQLiteDataAdapter.get_DeleteCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.DeleteCommandSetSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.set_DeleteCommand(SQLiteCommand value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.DisposeBoolean">
            <summary>Sets the shim of SQLiteDataAdapter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.FindBuilderMulticastDelegate">
            <summary>Sets the shim of SQLiteDataAdapter.FindBuilder(MulticastDelegate mcd)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.InsertCommandGet">
            <summary>Sets the shim of SQLiteDataAdapter.get_InsertCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.InsertCommandSetSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.set_InsertCommand(SQLiteCommand value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.OnRowUpdatedRowUpdatedEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.OnRowUpdated(RowUpdatedEventArgs value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.OnRowUpdatingRowUpdatingEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.OnRowUpdating(RowUpdatingEventArgs value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.RowUpdatedAddEventHandlerOfRowUpdatedEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.add_RowUpdated(EventHandler`1&lt;RowUpdatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.RowUpdatedRemoveEventHandlerOfRowUpdatedEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.remove_RowUpdated(EventHandler`1&lt;RowUpdatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.RowUpdatingAddEventHandlerOfRowUpdatingEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.add_RowUpdating(EventHandler`1&lt;RowUpdatingEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.RowUpdatingRemoveEventHandlerOfRowUpdatingEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.remove_RowUpdating(EventHandler`1&lt;RowUpdatingEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.SelectCommandGet">
            <summary>Sets the shim of SQLiteDataAdapter.get_SelectCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.SelectCommandSetSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.set_SelectCommand(SQLiteCommand value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.StaticConstructor">
            <summary>Sets the shim of SQLiteDataAdapter.SQLiteDataAdapter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.UpdateCommandGet">
            <summary>Sets the shim of SQLiteDataAdapter.get_UpdateCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.UpdateCommandSetSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.set_UpdateCommand(SQLiteCommand value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteDataAdapter.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.DeleteCommandGet">
            <summary>Sets the shim of SQLiteDataAdapter.get_DeleteCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.DeleteCommandSetSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.set_DeleteCommand(SQLiteCommand value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteDataAdapter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.InsertCommandGet">
            <summary>Sets the shim of SQLiteDataAdapter.get_InsertCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.InsertCommandSetSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.set_InsertCommand(SQLiteCommand value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.OnRowUpdatedRowUpdatedEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.OnRowUpdated(RowUpdatedEventArgs value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.OnRowUpdatingRowUpdatingEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.OnRowUpdating(RowUpdatingEventArgs value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.RowUpdatedAddEventHandlerOfRowUpdatedEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.add_RowUpdated(EventHandler`1&lt;RowUpdatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.RowUpdatedRemoveEventHandlerOfRowUpdatedEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.remove_RowUpdated(EventHandler`1&lt;RowUpdatedEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.RowUpdatingAddEventHandlerOfRowUpdatingEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.add_RowUpdating(EventHandler`1&lt;RowUpdatingEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.RowUpdatingRemoveEventHandlerOfRowUpdatingEventArgs">
            <summary>Sets the shim of SQLiteDataAdapter.remove_RowUpdating(EventHandler`1&lt;RowUpdatingEventArgs&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.SelectCommandGet">
            <summary>Sets the shim of SQLiteDataAdapter.get_SelectCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.SelectCommandSetSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.set_SelectCommand(SQLiteCommand value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.UpdateCommandGet">
            <summary>Sets the shim of SQLiteDataAdapter.get_UpdateCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataAdapter.AllInstances.UpdateCommandSetSQLiteCommand">
            <summary>Sets the shim of SQLiteDataAdapter.set_UpdateCommand(SQLiteCommand value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteDataReader">
            <summary>Shim type of System.Data.SQLite.SQLiteDataReader</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataReader.#ctor(System.Data.SQLite.SQLiteDataReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataReader.Bind(System.Data.IDataReader)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataReader.Bind(System.Data.IDataRecord)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteDataReader.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.Cancel">
            <summary>Sets the shim of SQLiteDataReader.Cancel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.CheckClosed">
            <summary>Sets the shim of SQLiteDataReader.CheckClosed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.CheckDisposed">
            <summary>Sets the shim of SQLiteDataReader.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.CheckValidRow">
            <summary>Sets the shim of SQLiteDataReader.CheckValidRow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.Close">
            <summary>Sets the shim of SQLiteDataReader.Close()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.ConstructorSQLiteCommandCommandBehavior">
            <summary>Sets the shim of SQLiteDataReader.SQLiteDataReader(SQLiteCommand cmd, CommandBehavior behave)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.DepthGet">
            <summary>Sets the shim of SQLiteDataReader.get_Depth()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.DisposeBoolean">
            <summary>Sets the shim of SQLiteDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.FieldCountGet">
            <summary>Sets the shim of SQLiteDataReader.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetBooleanInt32">
            <summary>Sets the shim of SQLiteDataReader.GetBoolean(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetByteInt32">
            <summary>Sets the shim of SQLiteDataReader.GetByte(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of SQLiteDataReader.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetCharInt32">
            <summary>Sets the shim of SQLiteDataReader.GetChar(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of SQLiteDataReader.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetDataTypeNameInt32">
            <summary>Sets the shim of SQLiteDataReader.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetDateTimeInt32">
            <summary>Sets the shim of SQLiteDataReader.GetDateTime(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetDecimalInt32">
            <summary>Sets the shim of SQLiteDataReader.GetDecimal(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetDoubleInt32">
            <summary>Sets the shim of SQLiteDataReader.GetDouble(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetEnumerator">
            <summary>Sets the shim of SQLiteDataReader.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetFloatInt32">
            <summary>Sets the shim of SQLiteDataReader.GetFloat(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetGuidInt32">
            <summary>Sets the shim of SQLiteDataReader.GetGuid(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetInt16Int32">
            <summary>Sets the shim of SQLiteDataReader.GetInt16(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetInt32Int32">
            <summary>Sets the shim of SQLiteDataReader.GetInt32(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetInt64Int32">
            <summary>Sets the shim of SQLiteDataReader.GetInt64(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetNameInt32">
            <summary>Sets the shim of SQLiteDataReader.GetName(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetOrdinalString">
            <summary>Sets the shim of SQLiteDataReader.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetSchemaTable">
            <summary>Sets the shim of SQLiteDataReader.GetSchemaTable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetSchemaTableBooleanBoolean">
            <summary>Sets the shim of SQLiteDataReader.GetSchemaTable(Boolean wantUniqueInfo, Boolean wantDefaultValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetStringInt32">
            <summary>Sets the shim of SQLiteDataReader.GetString(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetValueInt32">
            <summary>Sets the shim of SQLiteDataReader.GetValue(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetValues">
            <summary>Sets the shim of SQLiteDataReader.GetValues()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.GetValuesObjectArray">
            <summary>Sets the shim of SQLiteDataReader.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.HasRowsGet">
            <summary>Sets the shim of SQLiteDataReader.get_HasRows()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.IsClosedGet">
            <summary>Sets the shim of SQLiteDataReader.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.IsDBNullInt32">
            <summary>Sets the shim of SQLiteDataReader.IsDBNull(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.ItemGetInt32">
            <summary>Sets the shim of SQLiteDataReader.get_Item(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.ItemGetString">
            <summary>Sets the shim of SQLiteDataReader.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.LoadKeyInfo">
            <summary>Sets the shim of SQLiteDataReader.LoadKeyInfo()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.NextResult">
            <summary>Sets the shim of SQLiteDataReader.NextResult()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.Read">
            <summary>Sets the shim of SQLiteDataReader.Read()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.RecordsAffectedGet">
            <summary>Sets the shim of SQLiteDataReader.get_RecordsAffected()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.VerifyTypeInt32DbType">
            <summary>Sets the shim of SQLiteDataReader.VerifyType(Int32 i, DbType typ)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.VisibleFieldCountGet">
            <summary>Sets the shim of SQLiteDataReader.get_VisibleFieldCount()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.Cancel">
            <summary>Sets the shim of SQLiteDataReader.Cancel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.CheckClosed">
            <summary>Sets the shim of SQLiteDataReader.CheckClosed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteDataReader.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.CheckValidRow">
            <summary>Sets the shim of SQLiteDataReader.CheckValidRow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.Close">
            <summary>Sets the shim of SQLiteDataReader.Close()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.DepthGet">
            <summary>Sets the shim of SQLiteDataReader.get_Depth()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteDataReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.FieldCountGet">
            <summary>Sets the shim of SQLiteDataReader.get_FieldCount()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetBooleanInt32">
            <summary>Sets the shim of SQLiteDataReader.GetBoolean(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetByteInt32">
            <summary>Sets the shim of SQLiteDataReader.GetByte(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetBytesInt32Int64ByteArrayInt32Int32">
            <summary>Sets the shim of SQLiteDataReader.GetBytes(Int32 i, Int64 fieldOffset, Byte[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetCharInt32">
            <summary>Sets the shim of SQLiteDataReader.GetChar(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetCharsInt32Int64CharArrayInt32Int32">
            <summary>Sets the shim of SQLiteDataReader.GetChars(Int32 i, Int64 fieldoffset, Char[] buffer, Int32 bufferoffset, Int32 length)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetDataTypeNameInt32">
            <summary>Sets the shim of SQLiteDataReader.GetDataTypeName(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetDateTimeInt32">
            <summary>Sets the shim of SQLiteDataReader.GetDateTime(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetDecimalInt32">
            <summary>Sets the shim of SQLiteDataReader.GetDecimal(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetDoubleInt32">
            <summary>Sets the shim of SQLiteDataReader.GetDouble(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetEnumerator">
            <summary>Sets the shim of SQLiteDataReader.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetFloatInt32">
            <summary>Sets the shim of SQLiteDataReader.GetFloat(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetGuidInt32">
            <summary>Sets the shim of SQLiteDataReader.GetGuid(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetInt16Int32">
            <summary>Sets the shim of SQLiteDataReader.GetInt16(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetInt32Int32">
            <summary>Sets the shim of SQLiteDataReader.GetInt32(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetInt64Int32">
            <summary>Sets the shim of SQLiteDataReader.GetInt64(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetNameInt32">
            <summary>Sets the shim of SQLiteDataReader.GetName(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetOrdinalString">
            <summary>Sets the shim of SQLiteDataReader.GetOrdinal(String name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetSchemaTable">
            <summary>Sets the shim of SQLiteDataReader.GetSchemaTable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetSchemaTableBooleanBoolean">
            <summary>Sets the shim of SQLiteDataReader.GetSchemaTable(Boolean wantUniqueInfo, Boolean wantDefaultValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetStringInt32">
            <summary>Sets the shim of SQLiteDataReader.GetString(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetValueInt32">
            <summary>Sets the shim of SQLiteDataReader.GetValue(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetValues">
            <summary>Sets the shim of SQLiteDataReader.GetValues()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.GetValuesObjectArray">
            <summary>Sets the shim of SQLiteDataReader.GetValues(Object[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.HasRowsGet">
            <summary>Sets the shim of SQLiteDataReader.get_HasRows()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.IsClosedGet">
            <summary>Sets the shim of SQLiteDataReader.get_IsClosed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.IsDBNullInt32">
            <summary>Sets the shim of SQLiteDataReader.IsDBNull(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SQLiteDataReader.get_Item(Int32 i)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.ItemGetString">
            <summary>Sets the shim of SQLiteDataReader.get_Item(String name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.LoadKeyInfo">
            <summary>Sets the shim of SQLiteDataReader.LoadKeyInfo()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.NextResult">
            <summary>Sets the shim of SQLiteDataReader.NextResult()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.Read">
            <summary>Sets the shim of SQLiteDataReader.Read()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.RecordsAffectedGet">
            <summary>Sets the shim of SQLiteDataReader.get_RecordsAffected()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.VerifyTypeInt32DbType">
            <summary>Sets the shim of SQLiteDataReader.VerifyType(Int32 i, DbType typ)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteDataReader.AllInstances.VisibleFieldCountGet">
            <summary>Sets the shim of SQLiteDataReader.get_VisibleFieldCount()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteException">
            <summary>Shim type of System.Data.SQLite.SQLiteException</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteException.#ctor(System.Data.SQLite.SQLiteException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.Constructor">
            <summary>Sets the shim of SQLiteException.SQLiteException()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.ConstructorSQLiteErrorCodeString">
            <summary>Sets the shim of SQLiteException.SQLiteException(SQLiteErrorCode errorCode, String message)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SQLiteException.SQLiteException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.ConstructorString">
            <summary>Sets the shim of SQLiteException.SQLiteException(String message)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.ConstructorStringException">
            <summary>Sets the shim of SQLiteException.SQLiteException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.ErrorCodeGet">
            <summary>Sets the shim of SQLiteException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.GetErrorStringSQLiteErrorCode">
            <summary>Sets the shim of SQLiteException.GetErrorString(SQLiteErrorCode errorCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of SQLiteException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.GetStockErrorMessageSQLiteErrorCodeString">
            <summary>Sets the shim of SQLiteException.GetStockErrorMessage(SQLiteErrorCode errorCode, String message)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.ResultCodeGet">
            <summary>Sets the shim of SQLiteException.get_ResultCode()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of SQLiteException.get_ErrorCode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of SQLiteException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteException.AllInstances.ResultCodeGet">
            <summary>Sets the shim of SQLiteException.get_ResultCode()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteFactory">
            <summary>Shim type of System.Data.SQLite.SQLiteFactory</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFactory.#ctor(System.Data.SQLite.SQLiteFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFactory.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFactory.Bind(System.IServiceProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.CheckDisposed">
            <summary>Sets the shim of SQLiteFactory.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.Constructor">
            <summary>Sets the shim of SQLiteFactory.SQLiteFactory()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.CreateCommand">
            <summary>Sets the shim of SQLiteFactory.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.CreateCommandBuilder">
            <summary>Sets the shim of SQLiteFactory.CreateCommandBuilder()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.CreateConnection">
            <summary>Sets the shim of SQLiteFactory.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.CreateConnectionStringBuilder">
            <summary>Sets the shim of SQLiteFactory.CreateConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.CreateDataAdapter">
            <summary>Sets the shim of SQLiteFactory.CreateDataAdapter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.CreateParameter">
            <summary>Sets the shim of SQLiteFactory.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.Dispose">
            <summary>Sets the shim of SQLiteFactory.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.DisposeBoolean">
            <summary>Sets the shim of SQLiteFactory.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.GetSQLiteProviderServicesInstance">
            <summary>Sets the shim of SQLiteFactory.GetSQLiteProviderServicesInstance()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.LogAddSQLiteLogEventHandler">
            <summary>Sets the shim of SQLiteFactory.add_Log(SQLiteLogEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.LogRemoveSQLiteLogEventHandler">
            <summary>Sets the shim of SQLiteFactory.remove_Log(SQLiteLogEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.StaticConstructor">
            <summary>Sets the shim of SQLiteFactory.SQLiteFactory()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteFactory.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.CreateCommand">
            <summary>Sets the shim of SQLiteFactory.CreateCommand()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.CreateCommandBuilder">
            <summary>Sets the shim of SQLiteFactory.CreateCommandBuilder()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.CreateConnection">
            <summary>Sets the shim of SQLiteFactory.CreateConnection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.CreateConnectionStringBuilder">
            <summary>Sets the shim of SQLiteFactory.CreateConnectionStringBuilder()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.CreateDataAdapter">
            <summary>Sets the shim of SQLiteFactory.CreateDataAdapter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.CreateParameter">
            <summary>Sets the shim of SQLiteFactory.CreateParameter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.Dispose">
            <summary>Sets the shim of SQLiteFactory.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteFactory.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.GetSQLiteProviderServicesInstance">
            <summary>Sets the shim of SQLiteFactory.GetSQLiteProviderServicesInstance()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.LogAddSQLiteLogEventHandler">
            <summary>Sets the shim of SQLiteFactory.add_Log(SQLiteLogEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFactory.AllInstances.LogRemoveSQLiteLogEventHandler">
            <summary>Sets the shim of SQLiteFactory.remove_Log(SQLiteLogEventHandler value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteFunction">
            <summary>Shim type of System.Data.SQLite.SQLiteFunction</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunction.#ctor(System.Data.SQLite.SQLiteFunction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunction.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.CheckDisposed">
            <summary>Sets the shim of SQLiteFunction.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.CompareCallback16IntPtrInt32IntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.CompareCallback16(IntPtr ptr, Int32 len1, IntPtr ptr1, Int32 len2, IntPtr ptr2)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.CompareCallbackIntPtrInt32IntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.CompareCallback(IntPtr ptr, Int32 len1, IntPtr ptr1, Int32 len2, IntPtr ptr2)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.CompareStringString">
            <summary>Sets the shim of SQLiteFunction.Compare(String param1, String param2)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.Constructor">
            <summary>Sets the shim of SQLiteFunction.SQLiteFunction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.ConstructorSQLiteDateFormatsDateTimeKindStringBoolean">
            <summary>Sets the shim of SQLiteFunction.SQLiteFunction(SQLiteDateFormats format, DateTimeKind kind, String formatString, Boolean utf16)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.ConvertParamsInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.ConvertParams(Int32 nArgs, IntPtr argsptr)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.Dispose">
            <summary>Sets the shim of SQLiteFunction.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.DisposeBoolean">
            <summary>Sets the shim of SQLiteFunction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.FinalCallbackIntPtr">
            <summary>Sets the shim of SQLiteFunction.FinalCallback(IntPtr context)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.FinalObject">
            <summary>Sets the shim of SQLiteFunction.Final(Object contextData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.InvokeObjectArray">
            <summary>Sets the shim of SQLiteFunction.Invoke(Object[] args)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.SQLiteConvertGet">
            <summary>Sets the shim of SQLiteFunction.get_SQLiteConvert()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.ScalarCallbackIntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.ScalarCallback(IntPtr context, Int32 nArgs, IntPtr argsptr)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.SetReturnValueIntPtrObject">
            <summary>Sets the shim of SQLiteFunction.SetReturnValue(IntPtr context, Object returnValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.StaticConstructor">
            <summary>Sets the shim of SQLiteFunction.SQLiteFunction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.StepCallbackIntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.StepCallback(IntPtr context, Int32 nArgs, IntPtr argsptr)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.StepObjectArrayInt32ObjectRef">
            <summary>Sets the shim of SQLiteFunction.Step(Object[] args, Int32 stepNumber, Object&amp; contextData)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteFunction.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.CompareCallback16IntPtrInt32IntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.CompareCallback16(IntPtr ptr, Int32 len1, IntPtr ptr1, Int32 len2, IntPtr ptr2)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.CompareCallbackIntPtrInt32IntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.CompareCallback(IntPtr ptr, Int32 len1, IntPtr ptr1, Int32 len2, IntPtr ptr2)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.CompareStringString">
            <summary>Sets the shim of SQLiteFunction.Compare(String param1, String param2)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.ConvertParamsInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.ConvertParams(Int32 nArgs, IntPtr argsptr)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.Dispose">
            <summary>Sets the shim of SQLiteFunction.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteFunction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.FinalCallbackIntPtr">
            <summary>Sets the shim of SQLiteFunction.FinalCallback(IntPtr context)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.FinalObject">
            <summary>Sets the shim of SQLiteFunction.Final(Object contextData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.InvokeObjectArray">
            <summary>Sets the shim of SQLiteFunction.Invoke(Object[] args)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.SQLiteConvertGet">
            <summary>Sets the shim of SQLiteFunction.get_SQLiteConvert()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.ScalarCallbackIntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.ScalarCallback(IntPtr context, Int32 nArgs, IntPtr argsptr)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.SetReturnValueIntPtrObject">
            <summary>Sets the shim of SQLiteFunction.SetReturnValue(IntPtr context, Object returnValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.StepCallbackIntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteFunction.StepCallback(IntPtr context, Int32 nArgs, IntPtr argsptr)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunction.AllInstances.StepObjectArrayInt32ObjectRef">
            <summary>Sets the shim of SQLiteFunction.Step(Object[] args, Int32 stepNumber, Object&amp; contextData)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute">
            <summary>Shim type of System.Data.SQLite.SQLiteFunctionAttribute</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.#ctor(System.Data.SQLite.SQLiteFunctionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.ArgumentsGet">
            <summary>Sets the shim of SQLiteFunctionAttribute.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.ArgumentsSetInt32">
            <summary>Sets the shim of SQLiteFunctionAttribute.set_Arguments(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.Constructor">
            <summary>Sets the shim of SQLiteFunctionAttribute.SQLiteFunctionAttribute()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.ConstructorStringInt32FunctionType">
            <summary>Sets the shim of SQLiteFunctionAttribute.SQLiteFunctionAttribute(String name, Int32 argumentCount, FunctionType functionType)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.FuncTypeGet">
            <summary>Sets the shim of SQLiteFunctionAttribute.get_FuncType()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.FuncTypeSetFunctionType">
            <summary>Sets the shim of SQLiteFunctionAttribute.set_FuncType(FunctionType value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.NameGet">
            <summary>Sets the shim of SQLiteFunctionAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.NameSetString">
            <summary>Sets the shim of SQLiteFunctionAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.AllInstances.ArgumentsGet">
            <summary>Sets the shim of SQLiteFunctionAttribute.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.AllInstances.ArgumentsSetInt32">
            <summary>Sets the shim of SQLiteFunctionAttribute.set_Arguments(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.AllInstances.FuncTypeGet">
            <summary>Sets the shim of SQLiteFunctionAttribute.get_FuncType()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.AllInstances.FuncTypeSetFunctionType">
            <summary>Sets the shim of SQLiteFunctionAttribute.set_FuncType(FunctionType value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.AllInstances.NameGet">
            <summary>Sets the shim of SQLiteFunctionAttribute.get_Name()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of SQLiteFunctionAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx">
            <summary>Shim type of System.Data.SQLite.SQLiteFunctionEx</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.#ctor(System.Data.SQLite.SQLiteFunctionEx)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.CheckDisposed">
            <summary>Sets the shim of SQLiteFunctionEx.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.Constructor">
            <summary>Sets the shim of SQLiteFunctionEx.SQLiteFunctionEx()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.DisposeBoolean">
            <summary>Sets the shim of SQLiteFunctionEx.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.GetCollationSequence">
            <summary>Sets the shim of SQLiteFunctionEx.GetCollationSequence()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteFunctionEx.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteFunctionEx.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteFunctionEx.AllInstances.GetCollationSequence">
            <summary>Sets the shim of SQLiteFunctionEx.GetCollationSequence()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndex">
            <summary>Shim type of System.Data.SQLite.SQLiteIndex</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndex.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndex.#ctor(System.Data.SQLite.SQLiteIndex)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndex.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndex.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.ConstructorInt32Int32">
            <summary>Sets the shim of SQLiteIndex.SQLiteIndex(Int32 nConstraint, Int32 nOrderBy)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.FromIntPtrIntPtrSQLiteIndexRef">
            <summary>Sets the shim of SQLiteIndex.FromIntPtr(IntPtr pIndex, SQLiteIndex&amp; index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.InputsGet">
            <summary>Sets the shim of SQLiteIndex.get_Inputs()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.OutputsGet">
            <summary>Sets the shim of SQLiteIndex.get_Outputs()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.StaticConstructor">
            <summary>Sets the shim of SQLiteIndex.SQLiteIndex()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.ToIntPtrSQLiteIndexIntPtr">
            <summary>Sets the shim of SQLiteIndex.ToIntPtr(SQLiteIndex index, IntPtr pIndex)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndex.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.AllInstances.InputsGet">
            <summary>Sets the shim of SQLiteIndex.get_Inputs()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndex.AllInstances.OutputsGet">
            <summary>Sets the shim of SQLiteIndex.get_Outputs()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraint">
            <summary>Shim type of System.Data.SQLite.SQLiteIndexConstraint</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraint.#ctor(System.Data.SQLite.SQLiteIndexConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraint.ConstructorInt32SQLiteIndexConstraintOpByteInt32">
            <summary>Sets the shim of SQLiteIndexConstraint.SQLiteIndexConstraint(Int32 iColumn, SQLiteIndexConstraintOp op, Byte usable, Int32 iTermOffset)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraintUsage">
            <summary>Shim type of System.Data.SQLite.SQLiteIndexConstraintUsage</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraintUsage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraintUsage.#ctor(System.Data.SQLite.SQLiteIndexConstraintUsage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraintUsage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraintUsage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraintUsage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraintUsage.ConstructorInt32Byte">
            <summary>Sets the shim of SQLiteIndexConstraintUsage.SQLiteIndexConstraintUsage(Int32 argvIndex, Byte omit)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexConstraintUsage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs">
            <summary>Shim type of System.Data.SQLite.SQLiteIndexInputs</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.#ctor(System.Data.SQLite.SQLiteIndexInputs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.ConstraintsGet">
            <summary>Sets the shim of SQLiteIndexInputs.get_Constraints()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.ConstructorInt32Int32">
            <summary>Sets the shim of SQLiteIndexInputs.SQLiteIndexInputs(Int32 nConstraint, Int32 nOrderBy)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.OrderBysGet">
            <summary>Sets the shim of SQLiteIndexInputs.get_OrderBys()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.AllInstances.ConstraintsGet">
            <summary>Sets the shim of SQLiteIndexInputs.get_Constraints()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexInputs.AllInstances.OrderBysGet">
            <summary>Sets the shim of SQLiteIndexInputs.get_OrderBys()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexOrderBy">
            <summary>Shim type of System.Data.SQLite.SQLiteIndexOrderBy</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexOrderBy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexOrderBy.#ctor(System.Data.SQLite.SQLiteIndexOrderBy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexOrderBy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexOrderBy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOrderBy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOrderBy.ConstructorInt32Byte">
            <summary>Sets the shim of SQLiteIndexOrderBy.SQLiteIndexOrderBy(Int32 iColumn, Byte desc)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexOrderBy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs">
            <summary>Shim type of System.Data.SQLite.SQLiteIndexOutputs</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.#ctor(System.Data.SQLite.SQLiteIndexOutputs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.ConstraintUsagesGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_ConstraintUsages()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.ConstructorInt32">
            <summary>Sets the shim of SQLiteIndexOutputs.SQLiteIndexOutputs(Int32 nConstraint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.EstimatedCostGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_EstimatedCost()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.EstimatedCostSetNullableOfDouble">
            <summary>Sets the shim of SQLiteIndexOutputs.set_EstimatedCost(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.IndexNumberGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_IndexNumber()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.IndexNumberSetInt32">
            <summary>Sets the shim of SQLiteIndexOutputs.set_IndexNumber(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.IndexStringGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_IndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.IndexStringSetString">
            <summary>Sets the shim of SQLiteIndexOutputs.set_IndexString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.NeedToFreeIndexStringGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_NeedToFreeIndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.NeedToFreeIndexStringSetInt32">
            <summary>Sets the shim of SQLiteIndexOutputs.set_NeedToFreeIndexString(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.OrderByConsumedGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_OrderByConsumed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.OrderByConsumedSetInt32">
            <summary>Sets the shim of SQLiteIndexOutputs.set_OrderByConsumed(Int32 value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.ConstraintUsagesGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_ConstraintUsages()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.EstimatedCostGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_EstimatedCost()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.EstimatedCostSetNullableOfDouble">
            <summary>Sets the shim of SQLiteIndexOutputs.set_EstimatedCost(Nullable`1&lt;Double&gt; value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.IndexNumberGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_IndexNumber()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.IndexNumberSetInt32">
            <summary>Sets the shim of SQLiteIndexOutputs.set_IndexNumber(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.IndexStringGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_IndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.IndexStringSetString">
            <summary>Sets the shim of SQLiteIndexOutputs.set_IndexString(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.NeedToFreeIndexStringGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_NeedToFreeIndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.NeedToFreeIndexStringSetInt32">
            <summary>Sets the shim of SQLiteIndexOutputs.set_NeedToFreeIndexString(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.OrderByConsumedGet">
            <summary>Sets the shim of SQLiteIndexOutputs.get_OrderByConsumed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteIndexOutputs.AllInstances.OrderByConsumedSetInt32">
            <summary>Sets the shim of SQLiteIndexOutputs.set_OrderByConsumed(Int32 value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteLog">
            <summary>Shim type of System.Data.SQLite.SQLiteLog</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteLog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteLog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.AddDefaultHandler">
            <summary>Sets the shim of SQLiteLog.AddDefaultHandler()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.DomainUnloadObjectEventArgs">
            <summary>Sets the shim of SQLiteLog.DomainUnload(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.EnabledGet">
            <summary>Sets the shim of SQLiteLog.get_Enabled()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.EnabledSetBoolean">
            <summary>Sets the shim of SQLiteLog.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.Initialize">
            <summary>Sets the shim of SQLiteLog.Initialize()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.InitializeDefaultHandler">
            <summary>Sets the shim of SQLiteLog.InitializeDefaultHandler()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.LogAddSQLiteLogEventHandler">
            <summary>Sets the shim of SQLiteLog.add_Log(SQLiteLogEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.LogCallbackIntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteLog.LogCallback(IntPtr pUserData, Int32 errorCode, IntPtr pMessage)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.LogEventHandlerObjectLogEventArgs">
            <summary>Sets the shim of SQLiteLog.LogEventHandler(Object sender, LogEventArgs e)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.LogMessageInt32String">
            <summary>Sets the shim of SQLiteLog.LogMessage(Int32 errorCode, String message)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.LogMessageObjectString">
            <summary>Sets the shim of SQLiteLog.LogMessage(Object errorCode, String message)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.LogMessageSQLiteErrorCodeString">
            <summary>Sets the shim of SQLiteLog.LogMessage(SQLiteErrorCode errorCode, String message)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.LogMessageString">
            <summary>Sets the shim of SQLiteLog.LogMessage(String message)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.LogRemoveSQLiteLogEventHandler">
            <summary>Sets the shim of SQLiteLog.remove_Log(SQLiteLogEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.RemoveDefaultHandler">
            <summary>Sets the shim of SQLiteLog.RemoveDefaultHandler()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog.StaticConstructor">
            <summary>Sets the shim of SQLiteLog.SQLiteLog()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog._handlersAddSQLiteLogEventHandler">
            <summary>Sets the shim of SQLiteLog.add__handlers(SQLiteLogEventHandler value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteLog._handlersRemoveSQLiteLogEventHandler">
            <summary>Sets the shim of SQLiteLog.remove__handlers(SQLiteLogEventHandler value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteMetaDataCollectionNames">
            <summary>Shim type of System.Data.SQLite.SQLiteMetaDataCollectionNames</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteMetaDataCollectionNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteMetaDataCollectionNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteMetaDataCollectionNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteMetaDataCollectionNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteMetaDataCollectionNames.StaticConstructor">
            <summary>Sets the shim of SQLiteMetaDataCollectionNames.SQLiteMetaDataCollectionNames()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteModule">
            <summary>Shim type of System.Data.SQLite.SQLiteModule</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModule.#ctor(System.Data.SQLite.SQLiteModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModule.Bind(System.Data.SQLite.ISQLiteManagedModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModule.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllocateCursor">
            <summary>Sets the shim of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllocateTable">
            <summary>Sets the shim of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.CheckDisposed">
            <summary>Sets the shim of SQLiteModule.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.ConstructorString">
            <summary>Sets the shim of SQLiteModule.SQLiteModule(String name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.CreateDisposableModuleIntPtr">
            <summary>Sets the shim of SQLiteModule.CreateDisposableModule(IntPtr pDb)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.CreateNativeModuleImpl">
            <summary>Sets the shim of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.CreateOrConnectBooleanIntPtrIntPtrInt32IntPtrIntPtrRefIntPtrRef">
            <summary>Sets the shim of SQLiteModule.CreateOrConnect(Boolean create, IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.CursorFromIntPtrIntPtrIntPtr">
            <summary>Sets the shim of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.CursorToIntPtrSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.DeclareFunctionSQLiteConnectionInt32StringStringRef">
            <summary>Sets the shim of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.DeclareTableSQLiteConnectionStringStringRef">
            <summary>Sets the shim of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.DeclaredGet">
            <summary>Sets the shim of SQLiteModule.get_Declared()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.DeclaredSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_Declared(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.DestroyOrDisconnectBooleanIntPtr">
            <summary>Sets the shim of SQLiteModule.DestroyOrDisconnect(Boolean destroy, IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.Dispose">
            <summary>Sets the shim of SQLiteModule.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.DisposeBoolean">
            <summary>Sets the shim of SQLiteModule.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.FreeCursorIntPtr">
            <summary>Sets the shim of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.FreeTableIntPtr">
            <summary>Sets the shim of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.GetFunctionKeyInt32StringSQLiteFunction">
            <summary>Sets the shim of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.GetNativeModuleImpl">
            <summary>Sets the shim of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.LogErrorsGet">
            <summary>Sets the shim of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.LogErrorsNoThrowGet">
            <summary>Sets the shim of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.LogErrorsNoThrowSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_LogErrorsNoThrow(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.LogErrorsSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_LogErrors(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.LogExceptionsGet">
            <summary>Sets the shim of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.LogExceptionsNoThrowGet">
            <summary>Sets the shim of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.LogExceptionsNoThrowSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_LogExceptionsNoThrow(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.LogExceptionsSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_LogExceptions(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.NameGet">
            <summary>Sets the shim of SQLiteModule.get_Name()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetCursorErrorSQLiteModuleIntPtrBooleanString">
            <summary>Sets the shim of SQLiteModule.SetCursorError(SQLiteModule module, IntPtr pCursor, Boolean logErrors, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetCursorErrorSQLiteModuleSQLiteVirtualTableCursorBooleanString">
            <summary>Sets the shim of SQLiteModule.SetCursorError(SQLiteModule module, SQLiteVirtualTableCursor cursor, Boolean logErrors, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetCursorErrorSQLiteVirtualTableCursorString">
            <summary>Sets the shim of SQLiteModule.SetCursorError(SQLiteVirtualTableCursor cursor, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetEstimatedCostSQLiteIndex">
            <summary>Sets the shim of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetEstimatedCostSQLiteIndexDouble">
            <summary>Sets the shim of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetTableErrorIntPtrString">
            <summary>Sets the shim of SQLiteModule.SetTableError(IntPtr pVtab, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetTableErrorSQLiteModuleIntPtrBooleanString">
            <summary>Sets the shim of SQLiteModule.SetTableError(SQLiteModule module, IntPtr pVtab, Boolean logErrors, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetTableErrorSQLiteModuleSQLiteVirtualTableBooleanString">
            <summary>Sets the shim of SQLiteModule.SetTableError(SQLiteModule module, SQLiteVirtualTable table, Boolean logErrors, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.SetTableErrorSQLiteVirtualTableString">
            <summary>Sets the shim of SQLiteModule.SetTableError(SQLiteVirtualTable table, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.StaticConstructor">
            <summary>Sets the shim of SQLiteModule.SQLiteModule()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.TableFromCursorIntPtr">
            <summary>Sets the shim of SQLiteModule.TableFromCursor(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.TableFromCursorSQLiteModuleIntPtr">
            <summary>Sets the shim of SQLiteModule.TableFromCursor(SQLiteModule module, IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.TableFromIntPtrIntPtr">
            <summary>Sets the shim of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.TableToIntPtrSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.ZeroTableIntPtr">
            <summary>Sets the shim of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xBeginIntPtr">
            <summary>Sets the shim of SQLiteModule.xBegin(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xBestIndexIntPtrIntPtr">
            <summary>Sets the shim of SQLiteModule.xBestIndex(IntPtr pVtab, IntPtr pIndex)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xCloseIntPtr">
            <summary>Sets the shim of SQLiteModule.xClose(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xColumnIntPtrIntPtrInt32">
            <summary>Sets the shim of SQLiteModule.xColumn(IntPtr pCursor, IntPtr pContext, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xCommitIntPtr">
            <summary>Sets the shim of SQLiteModule.xCommit(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xConnectIntPtrIntPtrInt32IntPtrIntPtrRefIntPtrRef">
            <summary>Sets the shim of SQLiteModule.xConnect(IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xCreateIntPtrIntPtrInt32IntPtrIntPtrRefIntPtrRef">
            <summary>Sets the shim of SQLiteModule.xCreate(IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xDestroyIntPtr">
            <summary>Sets the shim of SQLiteModule.xDestroy(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xDestroyModuleIntPtr">
            <summary>Sets the shim of SQLiteModule.xDestroyModule(IntPtr pClientData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xDisconnectIntPtr">
            <summary>Sets the shim of SQLiteModule.xDisconnect(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xEofIntPtr">
            <summary>Sets the shim of SQLiteModule.xEof(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xFilterIntPtrInt32IntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteModule.xFilter(IntPtr pCursor, Int32 idxNum, IntPtr idxStr, Int32 argc, IntPtr argv)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xFindFunctionIntPtrInt32IntPtrSQLiteCallbackRefIntPtrRef">
            <summary>Sets the shim of SQLiteModule.xFindFunction(IntPtr pVtab, Int32 nArg, IntPtr zName, SQLiteCallback&amp; callback, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xNextIntPtr">
            <summary>Sets the shim of SQLiteModule.xNext(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xOpenIntPtrIntPtrRef">
            <summary>Sets the shim of SQLiteModule.xOpen(IntPtr pVtab, IntPtr&amp; pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xReleaseIntPtrInt32">
            <summary>Sets the shim of SQLiteModule.xRelease(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xRenameIntPtrIntPtr">
            <summary>Sets the shim of SQLiteModule.xRename(IntPtr pVtab, IntPtr zNew)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xRollbackIntPtr">
            <summary>Sets the shim of SQLiteModule.xRollback(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xRollbackToIntPtrInt32">
            <summary>Sets the shim of SQLiteModule.xRollbackTo(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xRowIdIntPtrInt64Ref">
            <summary>Sets the shim of SQLiteModule.xRowId(IntPtr pCursor, Int64&amp; rowId)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xSavepointIntPtrInt32">
            <summary>Sets the shim of SQLiteModule.xSavepoint(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xSyncIntPtr">
            <summary>Sets the shim of SQLiteModule.xSync(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.xUpdateIntPtrInt32IntPtrInt64Ref">
            <summary>Sets the shim of SQLiteModule.xUpdate(IntPtr pVtab, Int32 argc, IntPtr argv, Int64&amp; rowId)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.AllocateCursor">
            <summary>Sets the shim of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.AllocateTable">
            <summary>Sets the shim of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteModule.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.CreateDisposableModuleIntPtr">
            <summary>Sets the shim of SQLiteModule.CreateDisposableModule(IntPtr pDb)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.CreateNativeModuleImpl">
            <summary>Sets the shim of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.CreateOrConnectBooleanIntPtrIntPtrInt32IntPtrIntPtrRefIntPtrRef">
            <summary>Sets the shim of SQLiteModule.CreateOrConnect(Boolean create, IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.CursorFromIntPtrIntPtrIntPtr">
            <summary>Sets the shim of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.CursorToIntPtrSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.DeclareFunctionSQLiteConnectionInt32StringStringRef">
            <summary>Sets the shim of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.DeclareTableSQLiteConnectionStringStringRef">
            <summary>Sets the shim of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.DeclaredGet">
            <summary>Sets the shim of SQLiteModule.get_Declared()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.DeclaredSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_Declared(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.DestroyOrDisconnectBooleanIntPtr">
            <summary>Sets the shim of SQLiteModule.DestroyOrDisconnect(Boolean destroy, IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.Dispose">
            <summary>Sets the shim of SQLiteModule.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteModule.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.FreeCursorIntPtr">
            <summary>Sets the shim of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.FreeTableIntPtr">
            <summary>Sets the shim of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.GetFunctionKeyInt32StringSQLiteFunction">
            <summary>Sets the shim of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.GetNativeModuleImpl">
            <summary>Sets the shim of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.LogErrorsGet">
            <summary>Sets the shim of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.LogErrorsNoThrowGet">
            <summary>Sets the shim of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.LogErrorsNoThrowSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_LogErrorsNoThrow(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.LogErrorsSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_LogErrors(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.LogExceptionsGet">
            <summary>Sets the shim of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.LogExceptionsNoThrowGet">
            <summary>Sets the shim of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.LogExceptionsNoThrowSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_LogExceptionsNoThrow(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.LogExceptionsSetBoolean">
            <summary>Sets the shim of SQLiteModule.set_LogExceptions(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.NameGet">
            <summary>Sets the shim of SQLiteModule.get_Name()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.SetCursorErrorSQLiteVirtualTableCursorString">
            <summary>Sets the shim of SQLiteModule.SetCursorError(SQLiteVirtualTableCursor cursor, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.SetEstimatedCostSQLiteIndex">
            <summary>Sets the shim of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.SetEstimatedCostSQLiteIndexDouble">
            <summary>Sets the shim of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.SetTableErrorIntPtrString">
            <summary>Sets the shim of SQLiteModule.SetTableError(IntPtr pVtab, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.SetTableErrorSQLiteVirtualTableString">
            <summary>Sets the shim of SQLiteModule.SetTableError(SQLiteVirtualTable table, String error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.TableFromCursorIntPtr">
            <summary>Sets the shim of SQLiteModule.TableFromCursor(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.TableFromIntPtrIntPtr">
            <summary>Sets the shim of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.TableToIntPtrSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.ZeroTableIntPtr">
            <summary>Sets the shim of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xBeginIntPtr">
            <summary>Sets the shim of SQLiteModule.xBegin(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xBestIndexIntPtrIntPtr">
            <summary>Sets the shim of SQLiteModule.xBestIndex(IntPtr pVtab, IntPtr pIndex)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xCloseIntPtr">
            <summary>Sets the shim of SQLiteModule.xClose(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xColumnIntPtrIntPtrInt32">
            <summary>Sets the shim of SQLiteModule.xColumn(IntPtr pCursor, IntPtr pContext, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xCommitIntPtr">
            <summary>Sets the shim of SQLiteModule.xCommit(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xConnectIntPtrIntPtrInt32IntPtrIntPtrRefIntPtrRef">
            <summary>Sets the shim of SQLiteModule.xConnect(IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xCreateIntPtrIntPtrInt32IntPtrIntPtrRefIntPtrRef">
            <summary>Sets the shim of SQLiteModule.xCreate(IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xDestroyIntPtr">
            <summary>Sets the shim of SQLiteModule.xDestroy(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xDestroyModuleIntPtr">
            <summary>Sets the shim of SQLiteModule.xDestroyModule(IntPtr pClientData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xDisconnectIntPtr">
            <summary>Sets the shim of SQLiteModule.xDisconnect(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xEofIntPtr">
            <summary>Sets the shim of SQLiteModule.xEof(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xFilterIntPtrInt32IntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteModule.xFilter(IntPtr pCursor, Int32 idxNum, IntPtr idxStr, Int32 argc, IntPtr argv)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xFindFunctionIntPtrInt32IntPtrSQLiteCallbackRefIntPtrRef">
            <summary>Sets the shim of SQLiteModule.xFindFunction(IntPtr pVtab, Int32 nArg, IntPtr zName, SQLiteCallback&amp; callback, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xNextIntPtr">
            <summary>Sets the shim of SQLiteModule.xNext(IntPtr pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xOpenIntPtrIntPtrRef">
            <summary>Sets the shim of SQLiteModule.xOpen(IntPtr pVtab, IntPtr&amp; pCursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xReleaseIntPtrInt32">
            <summary>Sets the shim of SQLiteModule.xRelease(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xRenameIntPtrIntPtr">
            <summary>Sets the shim of SQLiteModule.xRename(IntPtr pVtab, IntPtr zNew)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xRollbackIntPtr">
            <summary>Sets the shim of SQLiteModule.xRollback(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xRollbackToIntPtrInt32">
            <summary>Sets the shim of SQLiteModule.xRollbackTo(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xRowIdIntPtrInt64Ref">
            <summary>Sets the shim of SQLiteModule.xRowId(IntPtr pCursor, Int64&amp; rowId)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xSavepointIntPtrInt32">
            <summary>Sets the shim of SQLiteModule.xSavepoint(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xSyncIntPtr">
            <summary>Sets the shim of SQLiteModule.xSync(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModule.AllInstances.xUpdateIntPtrInt32IntPtrInt64Ref">
            <summary>Sets the shim of SQLiteModule.xUpdate(IntPtr pVtab, Int32 argc, IntPtr argv, Int64&amp; rowId)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable">
            <summary>Shim type of System.Data.SQLite.SQLiteModuleEnumerable</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.#ctor(System.Data.SQLite.SQLiteModuleEnumerable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.Bind(System.Data.SQLite.ISQLiteManagedModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the shim of SQLiteModuleEnumerable.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.CheckDisposed">
            <summary>Sets the shim of SQLiteModuleEnumerable.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.CloseSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the shim of SQLiteModuleEnumerable.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the shim of SQLiteModuleEnumerable.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.ConstructorStringIEnumerable">
            <summary>Sets the shim of SQLiteModuleEnumerable.SQLiteModuleEnumerable(String name, IEnumerable enumerable)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the shim of SQLiteModuleEnumerable.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.CursorEndOfEnumeratorErrorSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.CursorEndOfEnumeratorError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.CursorTypeMismatchErrorSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.CursorTypeMismatchError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.DestroySQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleEnumerable.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.DisconnectSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleEnumerable.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.DisposeBoolean">
            <summary>Sets the shim of SQLiteModuleEnumerable.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.EofSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the shim of SQLiteModuleEnumerable.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.GetRowIdFromObjectSQLiteVirtualTableCursorObject">
            <summary>Sets the shim of SQLiteModuleEnumerable.GetRowIdFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.GetSqlForDeclareTable">
            <summary>Sets the shim of SQLiteModuleEnumerable.GetSqlForDeclareTable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.GetStringFromObjectSQLiteVirtualTableCursorObject">
            <summary>Sets the shim of SQLiteModuleEnumerable.GetStringFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.MakeRowIdInt32Int32">
            <summary>Sets the shim of SQLiteModuleEnumerable.MakeRowId(Int32 rowIndex, Int32 hashCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.NextSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the shim of SQLiteModuleEnumerable.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.RenameSQLiteVirtualTableString">
            <summary>Sets the shim of SQLiteModuleEnumerable.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the shim of SQLiteModuleEnumerable.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.StaticConstructor">
            <summary>Sets the shim of SQLiteModuleEnumerable.SQLiteModuleEnumerable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the shim of SQLiteModuleEnumerable.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the shim of SQLiteModuleEnumerable.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteModuleEnumerable.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.CloseSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the shim of SQLiteModuleEnumerable.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the shim of SQLiteModuleEnumerable.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the shim of SQLiteModuleEnumerable.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.CursorEndOfEnumeratorErrorSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.CursorEndOfEnumeratorError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.CursorTypeMismatchErrorSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.CursorTypeMismatchError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.DestroySQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleEnumerable.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.DisconnectSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleEnumerable.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteModuleEnumerable.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.EofSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the shim of SQLiteModuleEnumerable.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.GetRowIdFromObjectSQLiteVirtualTableCursorObject">
            <summary>Sets the shim of SQLiteModuleEnumerable.GetRowIdFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.GetSqlForDeclareTable">
            <summary>Sets the shim of SQLiteModuleEnumerable.GetSqlForDeclareTable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.GetStringFromObjectSQLiteVirtualTableCursorObject">
            <summary>Sets the shim of SQLiteModuleEnumerable.GetStringFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.MakeRowIdInt32Int32">
            <summary>Sets the shim of SQLiteModuleEnumerable.MakeRowId(Int32 rowIndex, Int32 hashCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.NextSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleEnumerable.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the shim of SQLiteModuleEnumerable.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.RenameSQLiteVirtualTableString">
            <summary>Sets the shim of SQLiteModuleEnumerable.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the shim of SQLiteModuleEnumerable.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleEnumerable.AllInstances.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the shim of SQLiteModuleEnumerable.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop">
            <summary>Shim type of System.Data.SQLite.SQLiteModuleNoop</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.#ctor(System.Data.SQLite.SQLiteModuleNoop)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.Bind(System.Data.SQLite.ISQLiteManagedModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.BeginSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the shim of SQLiteModuleNoop.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.CheckDisposed">
            <summary>Sets the shim of SQLiteModuleNoop.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.CloseSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleNoop.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the shim of SQLiteModuleNoop.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.CommitSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the shim of SQLiteModuleNoop.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.ConstructorString">
            <summary>Sets the shim of SQLiteModuleNoop.SQLiteModuleNoop(String name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the shim of SQLiteModuleNoop.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.DestroySQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.DisconnectSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.DisposeBoolean">
            <summary>Sets the shim of SQLiteModuleNoop.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.EofSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleNoop.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the shim of SQLiteModuleNoop.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.FindFunctionSQLiteVirtualTableInt32StringSQLiteFunctionRefIntPtrRef">
            <summary>Sets the shim of SQLiteModuleNoop.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.GetDefaultResultCode">
            <summary>Sets the shim of SQLiteModuleNoop.GetDefaultResultCode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.GetMethodResultCodeString">
            <summary>Sets the shim of SQLiteModuleNoop.GetMethodResultCode(String methodName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.NextSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleNoop.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the shim of SQLiteModuleNoop.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.ReleaseSQLiteVirtualTableInt32">
            <summary>Sets the shim of SQLiteModuleNoop.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.RenameSQLiteVirtualTableString">
            <summary>Sets the shim of SQLiteModuleNoop.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.ResultCodeToEofResultSQLiteErrorCode">
            <summary>Sets the shim of SQLiteModuleNoop.ResultCodeToEofResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.ResultCodeToFindFunctionResultSQLiteErrorCode">
            <summary>Sets the shim of SQLiteModuleNoop.ResultCodeToFindFunctionResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.RollbackSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.RollbackToSQLiteVirtualTableInt32">
            <summary>Sets the shim of SQLiteModuleNoop.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the shim of SQLiteModuleNoop.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.SavepointSQLiteVirtualTableInt32">
            <summary>Sets the shim of SQLiteModuleNoop.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.SetMethodResultCodeStringSQLiteErrorCode">
            <summary>Sets the shim of SQLiteModuleNoop.SetMethodResultCode(String methodName, SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.SyncSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the shim of SQLiteModuleNoop.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.BeginSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the shim of SQLiteModuleNoop.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteModuleNoop.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.CloseSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleNoop.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the shim of SQLiteModuleNoop.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.CommitSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the shim of SQLiteModuleNoop.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the shim of SQLiteModuleNoop.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.DestroySQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.DisconnectSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteModuleNoop.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.EofSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleNoop.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the shim of SQLiteModuleNoop.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.FindFunctionSQLiteVirtualTableInt32StringSQLiteFunctionRefIntPtrRef">
            <summary>Sets the shim of SQLiteModuleNoop.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.GetDefaultResultCode">
            <summary>Sets the shim of SQLiteModuleNoop.GetDefaultResultCode()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.GetMethodResultCodeString">
            <summary>Sets the shim of SQLiteModuleNoop.GetMethodResultCode(String methodName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.NextSQLiteVirtualTableCursor">
            <summary>Sets the shim of SQLiteModuleNoop.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the shim of SQLiteModuleNoop.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.ReleaseSQLiteVirtualTableInt32">
            <summary>Sets the shim of SQLiteModuleNoop.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.RenameSQLiteVirtualTableString">
            <summary>Sets the shim of SQLiteModuleNoop.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.ResultCodeToEofResultSQLiteErrorCode">
            <summary>Sets the shim of SQLiteModuleNoop.ResultCodeToEofResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.ResultCodeToFindFunctionResultSQLiteErrorCode">
            <summary>Sets the shim of SQLiteModuleNoop.ResultCodeToFindFunctionResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.RollbackSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.RollbackToSQLiteVirtualTableInt32">
            <summary>Sets the shim of SQLiteModuleNoop.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the shim of SQLiteModuleNoop.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.SavepointSQLiteVirtualTableInt32">
            <summary>Sets the shim of SQLiteModuleNoop.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.SetMethodResultCodeStringSQLiteErrorCode">
            <summary>Sets the shim of SQLiteModuleNoop.SetMethodResultCode(String methodName, SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.SyncSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteModuleNoop.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteModuleNoop.AllInstances.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the shim of SQLiteModuleNoop.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteParameter">
            <summary>Shim type of System.Data.SQLite.SQLiteParameter</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameter.#ctor(System.Data.SQLite.SQLiteParameter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameter.Bind(System.Data.IDataParameter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameter.Bind(System.Data.IDbDataParameter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameter.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.Clone">
            <summary>Sets the shim of SQLiteParameter.Clone()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.Constructor">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorDbType">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(DbType dbType)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorDbTypeInt32">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(DbType parameterType, Int32 parameterSize)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorDbTypeInt32String">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(DbType parameterType, Int32 parameterSize, String sourceColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorDbTypeInt32StringDataRowVersion">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(DbType parameterType, Int32 parameterSize, String sourceColumn, DataRowVersion rowVersion)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorDbTypeObject">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(DbType dbType, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorDbTypeString">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(DbType dbType, String sourceColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorDbTypeStringDataRowVersion">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(DbType dbType, String sourceColumn, DataRowVersion rowVersion)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorSQLiteParameter">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(SQLiteParameter source)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorString">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringDbType">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, DbType dbType)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringDbTypeInt32">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, DbType parameterType, Int32 parameterSize)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringDbTypeInt32ParameterDirectionBooleanByteByteStringDataRowVersionObject">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, DbType parameterType, Int32 parameterSize, ParameterDirection direction, Boolean isNullable, Byte precision, Byte scale, String sourceColumn, DataRowVersion rowVersion, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringDbTypeInt32ParameterDirectionByteByteStringDataRowVersionBooleanObject">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, DbType parameterType, Int32 parameterSize, ParameterDirection direction, Byte precision, Byte scale, String sourceColumn, DataRowVersion rowVersion, Boolean sourceColumnNullMapping, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringDbTypeInt32String">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, DbType parameterType, Int32 parameterSize, String sourceColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringDbTypeInt32StringDataRowVersion">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, DbType parameterType, Int32 parameterSize, String sourceColumn, DataRowVersion rowVersion)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringDbTypeString">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, DbType dbType, String sourceColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringDbTypeStringDataRowVersion">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, DbType dbType, String sourceColumn, DataRowVersion rowVersion)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ConstructorStringObject">
            <summary>Sets the shim of SQLiteParameter.SQLiteParameter(String parameterName, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.DbTypeGet">
            <summary>Sets the shim of SQLiteParameter.get_DbType()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.DbTypeSetDbType">
            <summary>Sets the shim of SQLiteParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.DirectionGet">
            <summary>Sets the shim of SQLiteParameter.get_Direction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.DirectionSetParameterDirection">
            <summary>Sets the shim of SQLiteParameter.set_Direction(ParameterDirection value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.IsNullableGet">
            <summary>Sets the shim of SQLiteParameter.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.IsNullableSetBoolean">
            <summary>Sets the shim of SQLiteParameter.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ParameterNameGet">
            <summary>Sets the shim of SQLiteParameter.get_ParameterName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ParameterNameSetString">
            <summary>Sets the shim of SQLiteParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ResetDbType">
            <summary>Sets the shim of SQLiteParameter.ResetDbType()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.SizeGet">
            <summary>Sets the shim of SQLiteParameter.get_Size()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.SizeSetInt32">
            <summary>Sets the shim of SQLiteParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.SourceColumnGet">
            <summary>Sets the shim of SQLiteParameter.get_SourceColumn()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.SourceColumnNullMappingGet">
            <summary>Sets the shim of SQLiteParameter.get_SourceColumnNullMapping()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.SourceColumnNullMappingSetBoolean">
            <summary>Sets the shim of SQLiteParameter.set_SourceColumnNullMapping(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.SourceColumnSetString">
            <summary>Sets the shim of SQLiteParameter.set_SourceColumn(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.SourceVersionGet">
            <summary>Sets the shim of SQLiteParameter.get_SourceVersion()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.SourceVersionSetDataRowVersion">
            <summary>Sets the shim of SQLiteParameter.set_SourceVersion(DataRowVersion value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ValueGet">
            <summary>Sets the shim of SQLiteParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.ValueSetObject">
            <summary>Sets the shim of SQLiteParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.Clone">
            <summary>Sets the shim of SQLiteParameter.Clone()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.DbTypeGet">
            <summary>Sets the shim of SQLiteParameter.get_DbType()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.DbTypeSetDbType">
            <summary>Sets the shim of SQLiteParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.DirectionGet">
            <summary>Sets the shim of SQLiteParameter.get_Direction()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.DirectionSetParameterDirection">
            <summary>Sets the shim of SQLiteParameter.set_Direction(ParameterDirection value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.IsNullableGet">
            <summary>Sets the shim of SQLiteParameter.get_IsNullable()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.IsNullableSetBoolean">
            <summary>Sets the shim of SQLiteParameter.set_IsNullable(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.ParameterNameGet">
            <summary>Sets the shim of SQLiteParameter.get_ParameterName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.ParameterNameSetString">
            <summary>Sets the shim of SQLiteParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.ResetDbType">
            <summary>Sets the shim of SQLiteParameter.ResetDbType()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.SizeGet">
            <summary>Sets the shim of SQLiteParameter.get_Size()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.SizeSetInt32">
            <summary>Sets the shim of SQLiteParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.SourceColumnGet">
            <summary>Sets the shim of SQLiteParameter.get_SourceColumn()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.SourceColumnNullMappingGet">
            <summary>Sets the shim of SQLiteParameter.get_SourceColumnNullMapping()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.SourceColumnNullMappingSetBoolean">
            <summary>Sets the shim of SQLiteParameter.set_SourceColumnNullMapping(Boolean value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.SourceColumnSetString">
            <summary>Sets the shim of SQLiteParameter.set_SourceColumn(String value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.SourceVersionGet">
            <summary>Sets the shim of SQLiteParameter.get_SourceVersion()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.SourceVersionSetDataRowVersion">
            <summary>Sets the shim of SQLiteParameter.set_SourceVersion(DataRowVersion value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.ValueGet">
            <summary>Sets the shim of SQLiteParameter.get_Value()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameter.AllInstances.ValueSetObject">
            <summary>Sets the shim of SQLiteParameter.set_Value(Object value)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection">
            <summary>Shim type of System.Data.SQLite.SQLiteParameterCollection</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.#ctor(System.Data.SQLite.SQLiteParameterCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.Bind(System.Data.IDataParameterCollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AddObject">
            <summary>Sets the shim of SQLiteParameterCollection.Add(Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AddRangeArray">
            <summary>Sets the shim of SQLiteParameterCollection.AddRange(Array values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AddRangeSQLiteParameterArray">
            <summary>Sets the shim of SQLiteParameterCollection.AddRange(SQLiteParameter[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AddSQLiteParameter">
            <summary>Sets the shim of SQLiteParameterCollection.Add(SQLiteParameter parameter)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AddStringDbType">
            <summary>Sets the shim of SQLiteParameterCollection.Add(String parameterName, DbType parameterType)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AddStringDbTypeInt32">
            <summary>Sets the shim of SQLiteParameterCollection.Add(String parameterName, DbType parameterType, Int32 parameterSize)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AddStringDbTypeInt32String">
            <summary>Sets the shim of SQLiteParameterCollection.Add(String parameterName, DbType parameterType, Int32 parameterSize, String sourceColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AddWithValueStringObject">
            <summary>Sets the shim of SQLiteParameterCollection.AddWithValue(String parameterName, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.Clear">
            <summary>Sets the shim of SQLiteParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.ConstructorSQLiteCommand">
            <summary>Sets the shim of SQLiteParameterCollection.SQLiteParameterCollection(SQLiteCommand cmd)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.ContainsObject">
            <summary>Sets the shim of SQLiteParameterCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.ContainsString">
            <summary>Sets the shim of SQLiteParameterCollection.Contains(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.CopyToArrayInt32">
            <summary>Sets the shim of SQLiteParameterCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.CountGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.GetEnumerator">
            <summary>Sets the shim of SQLiteParameterCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.GetParameterInt32">
            <summary>Sets the shim of SQLiteParameterCollection.GetParameter(Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.GetParameterString">
            <summary>Sets the shim of SQLiteParameterCollection.GetParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.IndexOfObject">
            <summary>Sets the shim of SQLiteParameterCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.IndexOfString">
            <summary>Sets the shim of SQLiteParameterCollection.IndexOf(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.InsertInt32Object">
            <summary>Sets the shim of SQLiteParameterCollection.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.IsFixedSizeGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.IsReadOnlyGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.IsSynchronizedGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.ItemGetInt32">
            <summary>Sets the shim of SQLiteParameterCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.ItemGetString">
            <summary>Sets the shim of SQLiteParameterCollection.get_Item(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.ItemSetInt32SQLiteParameter">
            <summary>Sets the shim of SQLiteParameterCollection.set_Item(Int32 index, SQLiteParameter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.ItemSetStringSQLiteParameter">
            <summary>Sets the shim of SQLiteParameterCollection.set_Item(String parameterName, SQLiteParameter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.RemoveAtInt32">
            <summary>Sets the shim of SQLiteParameterCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.RemoveAtString">
            <summary>Sets the shim of SQLiteParameterCollection.RemoveAt(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.RemoveObject">
            <summary>Sets the shim of SQLiteParameterCollection.Remove(Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.SetParameterInt32DbParameter">
            <summary>Sets the shim of SQLiteParameterCollection.SetParameter(Int32 index, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.SetParameterStringDbParameter">
            <summary>Sets the shim of SQLiteParameterCollection.SetParameter(String parameterName, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.SyncRootGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.Unbind">
            <summary>Sets the shim of SQLiteParameterCollection.Unbind()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.AddObject">
            <summary>Sets the shim of SQLiteParameterCollection.Add(Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.AddRangeArray">
            <summary>Sets the shim of SQLiteParameterCollection.AddRange(Array values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.AddRangeSQLiteParameterArray">
            <summary>Sets the shim of SQLiteParameterCollection.AddRange(SQLiteParameter[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.AddSQLiteParameter">
            <summary>Sets the shim of SQLiteParameterCollection.Add(SQLiteParameter parameter)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.AddStringDbType">
            <summary>Sets the shim of SQLiteParameterCollection.Add(String parameterName, DbType parameterType)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.AddStringDbTypeInt32">
            <summary>Sets the shim of SQLiteParameterCollection.Add(String parameterName, DbType parameterType, Int32 parameterSize)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.AddStringDbTypeInt32String">
            <summary>Sets the shim of SQLiteParameterCollection.Add(String parameterName, DbType parameterType, Int32 parameterSize, String sourceColumn)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.AddWithValueStringObject">
            <summary>Sets the shim of SQLiteParameterCollection.AddWithValue(String parameterName, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.Clear">
            <summary>Sets the shim of SQLiteParameterCollection.Clear()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.ContainsObject">
            <summary>Sets the shim of SQLiteParameterCollection.Contains(Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.ContainsString">
            <summary>Sets the shim of SQLiteParameterCollection.Contains(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.CopyToArrayInt32">
            <summary>Sets the shim of SQLiteParameterCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.CountGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_Count()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of SQLiteParameterCollection.GetEnumerator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.GetParameterInt32">
            <summary>Sets the shim of SQLiteParameterCollection.GetParameter(Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.GetParameterString">
            <summary>Sets the shim of SQLiteParameterCollection.GetParameter(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.IndexOfObject">
            <summary>Sets the shim of SQLiteParameterCollection.IndexOf(Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.IndexOfString">
            <summary>Sets the shim of SQLiteParameterCollection.IndexOf(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.InsertInt32Object">
            <summary>Sets the shim of SQLiteParameterCollection.Insert(Int32 index, Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.IsFixedSizeGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.IsSynchronizedGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SQLiteParameterCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of SQLiteParameterCollection.get_Item(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.ItemSetInt32SQLiteParameter">
            <summary>Sets the shim of SQLiteParameterCollection.set_Item(Int32 index, SQLiteParameter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.ItemSetStringSQLiteParameter">
            <summary>Sets the shim of SQLiteParameterCollection.set_Item(String parameterName, SQLiteParameter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of SQLiteParameterCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.RemoveAtString">
            <summary>Sets the shim of SQLiteParameterCollection.RemoveAt(String parameterName)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.RemoveObject">
            <summary>Sets the shim of SQLiteParameterCollection.Remove(Object value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.SetParameterInt32DbParameter">
            <summary>Sets the shim of SQLiteParameterCollection.SetParameter(Int32 index, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.SetParameterStringDbParameter">
            <summary>Sets the shim of SQLiteParameterCollection.SetParameter(String parameterName, DbParameter value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.SyncRootGet">
            <summary>Sets the shim of SQLiteParameterCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteParameterCollection.AllInstances.Unbind">
            <summary>Sets the shim of SQLiteParameterCollection.Unbind()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteTransaction">
            <summary>Shim type of System.Data.SQLite.SQLiteTransaction</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteTransaction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteTransaction.#ctor(System.Data.SQLite.SQLiteTransaction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteTransaction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteTransaction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteTransaction.Bind(System.Data.IDbTransaction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteTransaction.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.CheckDisposed">
            <summary>Sets the shim of SQLiteTransaction.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.Commit">
            <summary>Sets the shim of SQLiteTransaction.Commit()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.ConnectionGet">
            <summary>Sets the shim of SQLiteTransaction.get_Connection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.ConstructorSQLiteConnectionBoolean">
            <summary>Sets the shim of SQLiteTransaction.SQLiteTransaction(SQLiteConnection connection, Boolean deferredLock)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.DbConnectionGet">
            <summary>Sets the shim of SQLiteTransaction.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.DisposeBoolean">
            <summary>Sets the shim of SQLiteTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.IsValidBoolean">
            <summary>Sets the shim of SQLiteTransaction.IsValid(Boolean throwError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.IsolationLevelGet">
            <summary>Sets the shim of SQLiteTransaction.get_IsolationLevel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.IssueRollbackBoolean">
            <summary>Sets the shim of SQLiteTransaction.IssueRollback(Boolean throwError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.Rollback">
            <summary>Sets the shim of SQLiteTransaction.Rollback()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteTransaction.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.Commit">
            <summary>Sets the shim of SQLiteTransaction.Commit()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.ConnectionGet">
            <summary>Sets the shim of SQLiteTransaction.get_Connection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.DbConnectionGet">
            <summary>Sets the shim of SQLiteTransaction.get_DbConnection()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteTransaction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.IsValidBoolean">
            <summary>Sets the shim of SQLiteTransaction.IsValid(Boolean throwError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.IsolationLevelGet">
            <summary>Sets the shim of SQLiteTransaction.get_IsolationLevel()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.IssueRollbackBoolean">
            <summary>Sets the shim of SQLiteTransaction.IssueRollback(Boolean throwError)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteTransaction.AllInstances.Rollback">
            <summary>Sets the shim of SQLiteTransaction.Rollback()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteValue">
            <summary>Shim type of System.Data.SQLite.SQLiteValue</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteValue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteValue.#ctor(System.Data.SQLite.SQLiteValue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteValue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteValue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteValue.Bind(System.Data.SQLite.ISQLiteNativeHandle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.ArrayFromSizeAndIntPtrInt32IntPtr">
            <summary>Sets the shim of SQLiteValue.ArrayFromSizeAndIntPtr(Int32 argc, IntPtr argv)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.ConstructorIntPtr">
            <summary>Sets the shim of SQLiteValue.SQLiteValue(IntPtr pValue)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.GetBlob">
            <summary>Sets the shim of SQLiteValue.GetBlob()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.GetBytes">
            <summary>Sets the shim of SQLiteValue.GetBytes()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.GetDouble">
            <summary>Sets the shim of SQLiteValue.GetDouble()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.GetInt">
            <summary>Sets the shim of SQLiteValue.GetInt()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.GetInt64">
            <summary>Sets the shim of SQLiteValue.GetInt64()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.GetString">
            <summary>Sets the shim of SQLiteValue.GetString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.GetTypeAffinity">
            <summary>Sets the shim of SQLiteValue.GetTypeAffinity()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.NativeHandleGet">
            <summary>Sets the shim of SQLiteValue.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.Persist">
            <summary>Sets the shim of SQLiteValue.Persist()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.PersistedGet">
            <summary>Sets the shim of SQLiteValue.get_Persisted()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.PreventNativeAccess">
            <summary>Sets the shim of SQLiteValue.PreventNativeAccess()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.ValueGet">
            <summary>Sets the shim of SQLiteValue.get_Value()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.GetBlob">
            <summary>Sets the shim of SQLiteValue.GetBlob()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.GetBytes">
            <summary>Sets the shim of SQLiteValue.GetBytes()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.GetDouble">
            <summary>Sets the shim of SQLiteValue.GetDouble()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.GetInt">
            <summary>Sets the shim of SQLiteValue.GetInt()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.GetInt64">
            <summary>Sets the shim of SQLiteValue.GetInt64()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.GetString">
            <summary>Sets the shim of SQLiteValue.GetString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.GetTypeAffinity">
            <summary>Sets the shim of SQLiteValue.GetTypeAffinity()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.NativeHandleGet">
            <summary>Sets the shim of SQLiteValue.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.Persist">
            <summary>Sets the shim of SQLiteValue.Persist()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.PersistedGet">
            <summary>Sets the shim of SQLiteValue.get_Persisted()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.PreventNativeAccess">
            <summary>Sets the shim of SQLiteValue.PreventNativeAccess()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteValue.AllInstances.ValueGet">
            <summary>Sets the shim of SQLiteValue.get_Value()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable">
            <summary>Shim type of System.Data.SQLite.SQLiteVirtualTable</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.#ctor(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.Bind(System.Data.SQLite.ISQLiteNativeHandle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.ArgumentsGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.BestIndexSQLiteIndex">
            <summary>Sets the shim of SQLiteVirtualTable.BestIndex(SQLiteIndex index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.CheckDisposed">
            <summary>Sets the shim of SQLiteVirtualTable.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.ConstructorStringArray">
            <summary>Sets the shim of SQLiteVirtualTable.SQLiteVirtualTable(String[] arguments)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.DatabaseNameGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_DatabaseName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.Dispose">
            <summary>Sets the shim of SQLiteVirtualTable.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.DisposeBoolean">
            <summary>Sets the shim of SQLiteVirtualTable.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.IndexGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_Index()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.ModuleNameGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_ModuleName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.NativeHandleGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.NativeHandleSetIntPtr">
            <summary>Sets the shim of SQLiteVirtualTable.set_NativeHandle(IntPtr value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.RenameString">
            <summary>Sets the shim of SQLiteVirtualTable.Rename(String name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.TableNameGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_TableName()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.ArgumentsGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.BestIndexSQLiteIndex">
            <summary>Sets the shim of SQLiteVirtualTable.BestIndex(SQLiteIndex index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteVirtualTable.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.DatabaseNameGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_DatabaseName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.Dispose">
            <summary>Sets the shim of SQLiteVirtualTable.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteVirtualTable.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.IndexGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_Index()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.ModuleNameGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_ModuleName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.NativeHandleGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.NativeHandleSetIntPtr">
            <summary>Sets the shim of SQLiteVirtualTable.set_NativeHandle(IntPtr value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.RenameString">
            <summary>Sets the shim of SQLiteVirtualTable.Rename(String name)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTable.AllInstances.TableNameGet">
            <summary>Sets the shim of SQLiteVirtualTable.get_TableName()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor">
            <summary>Shim type of System.Data.SQLite.SQLiteVirtualTableCursor</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.#ctor(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.Bind(System.Data.SQLite.ISQLiteNativeHandle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.CheckDisposed">
            <summary>Sets the shim of SQLiteVirtualTableCursor.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.Constructor">
            <summary>Sets the shim of SQLiteVirtualTableCursor.SQLiteVirtualTableCursor()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.ConstructorSQLiteVirtualTable">
            <summary>Sets the shim of SQLiteVirtualTableCursor.SQLiteVirtualTableCursor(SQLiteVirtualTable table)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.Dispose">
            <summary>Sets the shim of SQLiteVirtualTableCursor.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.DisposeBoolean">
            <summary>Sets the shim of SQLiteVirtualTableCursor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.FilterInt32StringSQLiteValueArray">
            <summary>Sets the shim of SQLiteVirtualTableCursor.Filter(Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.GetRowIndex">
            <summary>Sets the shim of SQLiteVirtualTableCursor.GetRowIndex()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.IndexNumberGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_IndexNumber()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.IndexStringGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_IndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.NativeHandleGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.NativeHandleSetIntPtr">
            <summary>Sets the shim of SQLiteVirtualTableCursor.set_NativeHandle(IntPtr value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.NextRowIndex">
            <summary>Sets the shim of SQLiteVirtualTableCursor.NextRowIndex()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.StaticConstructor">
            <summary>Sets the shim of SQLiteVirtualTableCursor.SQLiteVirtualTableCursor()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.TableGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_Table()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.TryPersistValuesSQLiteValueArray">
            <summary>Sets the shim of SQLiteVirtualTableCursor.TryPersistValues(SQLiteValue[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.ValuesGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_Values()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteVirtualTableCursor.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.Dispose">
            <summary>Sets the shim of SQLiteVirtualTableCursor.Dispose()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteVirtualTableCursor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.FilterInt32StringSQLiteValueArray">
            <summary>Sets the shim of SQLiteVirtualTableCursor.Filter(Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.GetRowIndex">
            <summary>Sets the shim of SQLiteVirtualTableCursor.GetRowIndex()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.IndexNumberGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_IndexNumber()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.IndexStringGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_IndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.NativeHandleGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.NativeHandleSetIntPtr">
            <summary>Sets the shim of SQLiteVirtualTableCursor.set_NativeHandle(IntPtr value)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.NextRowIndex">
            <summary>Sets the shim of SQLiteVirtualTableCursor.NextRowIndex()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.TableGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_Table()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.TryPersistValuesSQLiteValueArray">
            <summary>Sets the shim of SQLiteVirtualTableCursor.TryPersistValues(SQLiteValue[] values)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursor.AllInstances.ValuesGet">
            <summary>Sets the shim of SQLiteVirtualTableCursor.get_Values()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator">
            <summary>Shim type of System.Data.SQLite.SQLiteVirtualTableCursorEnumerator</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.#ctor(System.Data.SQLite.SQLiteVirtualTableCursorEnumerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.Bind(System.Data.SQLite.ISQLiteNativeHandle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.CheckClosed">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.CheckClosed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.CheckDisposed">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.Close">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.Close()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.ConstructorSQLiteVirtualTableIEnumerator">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.SQLiteVirtualTableCursorEnumerator(SQLiteVirtualTable table, IEnumerator enumerator)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.CurrentGet">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.get_Current()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.DisposeBoolean">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.EndOfEnumeratorGet">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.get_EndOfEnumerator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.IsOpenGet">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.get_IsOpen()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.MoveNext">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.MoveNext()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.Reset">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.Reset()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.CheckClosed">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.CheckClosed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.Close">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.Close()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.CurrentGet">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.get_Current()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.EndOfEnumeratorGet">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.get_EndOfEnumerator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.IsOpenGet">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.get_IsOpen()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.MoveNext">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.MoveNext()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimSQLiteVirtualTableCursorEnumerator.AllInstances.Reset">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator.Reset()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimTraceEventArgs">
            <summary>Shim type of System.Data.SQLite.TraceEventArgs</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimTraceEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimTraceEventArgs.#ctor(System.Data.SQLite.TraceEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimTraceEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimTraceEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimTraceEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimTraceEventArgs.ConstructorString">
            <summary>Sets the shim of TraceEventArgs.TraceEventArgs(String statement)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimTraceEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimUpdateEventArgs">
            <summary>Shim type of System.Data.SQLite.UpdateEventArgs</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimUpdateEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimUpdateEventArgs.#ctor(System.Data.SQLite.UpdateEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimUpdateEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.ShimUpdateEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimUpdateEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.ShimUpdateEventArgs.ConstructorStringStringUpdateEventTypeInt64">
            <summary>Sets the shim of UpdateEventArgs.UpdateEventArgs(String database, String table, UpdateEventType eventType, Int64 rowid)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.ShimUpdateEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubISQLiteConnectionPool">
            <summary>Stub type of System.Data.SQLite.ISQLiteConnectionPool</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.#ctor">
            <summary>Initializes a new instance of type StubISQLiteConnectionPool</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.AddStringObjectInt32">
            <summary>Sets the stub of ISQLiteConnectionPool.Add(String fileName, Object handle, Int32 version)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.ClearAllPools">
            <summary>Sets the stub of ISQLiteConnectionPool.ClearAllPools()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.ClearPoolString">
            <summary>Sets the stub of ISQLiteConnectionPool.ClearPool(String fileName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.GetCountsStringDictionaryOfStringInt32RefInt32RefInt32RefInt32Ref">
            <summary>Sets the stub of ISQLiteConnectionPool.GetCounts(String fileName, Dictionary`2&lt;String,Int32&gt;&amp; counts, Int32&amp; openCount, Int32&amp; closeCount, Int32&amp; totalCount)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.RemoveStringInt32Int32Out">
            <summary>Sets the stub of ISQLiteConnectionPool.Remove(String fileName, Int32 maxPoolSize, Int32&amp; version)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.sdsql::System#Data#SQLite#ISQLiteConnectionPool#Add(System.String,System.Object,System.Int32)">
            <summary>Sets the stub of ISQLiteConnectionPool.Add(String fileName, Object handle, Int32 version)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.sdsql::System#Data#SQLite#ISQLiteConnectionPool#ClearAllPools">
            <summary>Sets the stub of ISQLiteConnectionPool.ClearAllPools()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.sdsql::System#Data#SQLite#ISQLiteConnectionPool#ClearPool(System.String)">
            <summary>Sets the stub of ISQLiteConnectionPool.ClearPool(String fileName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.sdsql::System#Data#SQLite#ISQLiteConnectionPool#GetCounts(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32}@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Sets the stub of ISQLiteConnectionPool.GetCounts(String fileName, Dictionary`2&lt;String,Int32&gt;&amp; counts, Int32&amp; openCount, Int32&amp; closeCount, Int32&amp; totalCount)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteConnectionPool.sdsql::System#Data#SQLite#ISQLiteConnectionPool#Remove(System.String,System.Int32,System.Int32@)">
            <summary>Sets the stub of ISQLiteConnectionPool.Remove(String fileName, Int32 maxPoolSize, Int32&amp; version)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubISQLiteManagedModule">
            <summary>Stub type of System.Data.SQLite.ISQLiteManagedModule</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.#ctor">
            <summary>Initializes a new instance of type StubISQLiteManagedModule</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.BeginSQLiteVirtualTable">
            <summary>Sets the stub of ISQLiteManagedModule.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the stub of ISQLiteManagedModule.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.CloseSQLiteVirtualTableCursor">
            <summary>Sets the stub of ISQLiteManagedModule.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the stub of ISQLiteManagedModule.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.CommitSQLiteVirtualTable">
            <summary>Sets the stub of ISQLiteManagedModule.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of ISQLiteManagedModule.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of ISQLiteManagedModule.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.DeclaredGet">
            <summary>Sets the stub of ISQLiteManagedModule.get_Declared()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.DestroySQLiteVirtualTable">
            <summary>Sets the stub of ISQLiteManagedModule.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.DisconnectSQLiteVirtualTable">
            <summary>Sets the stub of ISQLiteManagedModule.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.EofSQLiteVirtualTableCursor">
            <summary>Sets the stub of ISQLiteManagedModule.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the stub of ISQLiteManagedModule.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.FindFunctionSQLiteVirtualTableInt32StringSQLiteFunctionRefIntPtrRef">
            <summary>Sets the stub of ISQLiteManagedModule.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.NameGet">
            <summary>Sets the stub of ISQLiteManagedModule.get_Name()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.NextSQLiteVirtualTableCursor">
            <summary>Sets the stub of ISQLiteManagedModule.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the stub of ISQLiteManagedModule.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.ReleaseSQLiteVirtualTableInt32">
            <summary>Sets the stub of ISQLiteManagedModule.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.RenameSQLiteVirtualTableString">
            <summary>Sets the stub of ISQLiteManagedModule.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.RollbackSQLiteVirtualTable">
            <summary>Sets the stub of ISQLiteManagedModule.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.RollbackToSQLiteVirtualTableInt32">
            <summary>Sets the stub of ISQLiteManagedModule.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the stub of ISQLiteManagedModule.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.SavepointSQLiteVirtualTableInt32">
            <summary>Sets the stub of ISQLiteManagedModule.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.SyncSQLiteVirtualTable">
            <summary>Sets the stub of ISQLiteManagedModule.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Begin(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of ISQLiteManagedModule.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#BestIndex(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of ISQLiteManagedModule.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Close(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of ISQLiteManagedModule.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Column(System.Data.SQLite.SQLiteVirtualTableCursor,System.Data.SQLite.SQLiteContext,System.Int32)">
            <summary>Sets the stub of ISQLiteManagedModule.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Commit(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of ISQLiteManagedModule.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Connect(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of ISQLiteManagedModule.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Create(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of ISQLiteManagedModule.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Destroy(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of ISQLiteManagedModule.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Disconnect(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of ISQLiteManagedModule.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Eof(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of ISQLiteManagedModule.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Filter(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int32,System.String,System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of ISQLiteManagedModule.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#FindFunction(System.Data.SQLite.SQLiteVirtualTable,System.Int32,System.String,System.Data.SQLite.SQLiteFunction@,System.IntPtr@)">
            <summary>Sets the stub of ISQLiteManagedModule.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Next(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of ISQLiteManagedModule.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Open(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteVirtualTableCursor@)">
            <summary>Sets the stub of ISQLiteManagedModule.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Release(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of ISQLiteManagedModule.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Rename(System.Data.SQLite.SQLiteVirtualTable,System.String)">
            <summary>Sets the stub of ISQLiteManagedModule.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Rollback(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of ISQLiteManagedModule.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#RollbackTo(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of ISQLiteManagedModule.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#RowId(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int64@)">
            <summary>Sets the stub of ISQLiteManagedModule.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Savepoint(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of ISQLiteManagedModule.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Sync(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of ISQLiteManagedModule.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Update(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteValue[],System.Int64@)">
            <summary>Sets the stub of ISQLiteManagedModule.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteManagedModule.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the stub of ISQLiteManagedModule.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Declared">
            <summary>Sets the stub of ISQLiteManagedModule.get_Declared()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubISQLiteManagedModule.sdsql::System#Data#SQLite#ISQLiteManagedModule#Name">
            <summary>Sets the stub of ISQLiteManagedModule.get_Name()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubISQLiteNativeHandle">
            <summary>Stub type of System.Data.SQLite.ISQLiteNativeHandle</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeHandle.#ctor">
            <summary>Initializes a new instance of type StubISQLiteNativeHandle</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeHandle.NativeHandleGet">
            <summary>Sets the stub of ISQLiteNativeHandle.get_NativeHandle()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubISQLiteNativeHandle.sdsql::System#Data#SQLite#ISQLiteNativeHandle#NativeHandle">
            <summary>Sets the stub of ISQLiteNativeHandle.get_NativeHandle()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubISQLiteNativeModule">
            <summary>Stub type of System.Data.SQLite.ISQLiteNativeModule</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.#ctor">
            <summary>Initializes a new instance of type StubISQLiteNativeModule</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xBegin(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xBegin(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xBestIndex(System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xBestIndex(IntPtr pVtab, IntPtr pIndex)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xClose(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xClose(IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xColumn(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>Sets the stub of ISQLiteNativeModule.xColumn(IntPtr pCursor, IntPtr pContext, Int32 index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xCommit(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xCommit(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xConnect(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr@,System.IntPtr@)">
            <summary>Sets the stub of ISQLiteNativeModule.xConnect(IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xCreate(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr@,System.IntPtr@)">
            <summary>Sets the stub of ISQLiteNativeModule.xCreate(IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xDestroy(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xDestroy(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xDisconnect(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xDisconnect(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xEof(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xEof(IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xFilter(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xFilter(IntPtr pCursor, Int32 idxNum, IntPtr idxStr, Int32 argc, IntPtr argv)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xFindFunction(System.IntPtr,System.Int32,System.IntPtr,System.Data.SQLite.SQLiteCallback@,System.IntPtr@)">
            <summary>Sets the stub of ISQLiteNativeModule.xFindFunction(IntPtr pVtab, Int32 nArg, IntPtr zName, SQLiteCallback&amp; callback, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xNext(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xNext(IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xOpen(System.IntPtr,System.IntPtr@)">
            <summary>Sets the stub of ISQLiteNativeModule.xOpen(IntPtr pVtab, IntPtr&amp; pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xRelease(System.IntPtr,System.Int32)">
            <summary>Sets the stub of ISQLiteNativeModule.xRelease(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xRename(System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xRename(IntPtr pVtab, IntPtr zNew)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xRollback(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xRollback(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xRollbackTo(System.IntPtr,System.Int32)">
            <summary>Sets the stub of ISQLiteNativeModule.xRollbackTo(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xRowId(System.IntPtr,System.Int64@)">
            <summary>Sets the stub of ISQLiteNativeModule.xRowId(IntPtr pCursor, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xSavepoint(System.IntPtr,System.Int32)">
            <summary>Sets the stub of ISQLiteNativeModule.xSavepoint(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xSync(System.IntPtr)">
            <summary>Sets the stub of ISQLiteNativeModule.xSync(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubISQLiteNativeModule.sdsql::System#Data#SQLite#ISQLiteNativeModule#xUpdate(System.IntPtr,System.Int32,System.IntPtr,System.Int64@)">
            <summary>Sets the stub of ISQLiteNativeModule.xUpdate(IntPtr pVtab, Int32 argc, IntPtr argv, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XBeginIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xBegin(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XBestIndexIntPtrIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xBestIndex(IntPtr pVtab, IntPtr pIndex)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XCloseIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xClose(IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XColumnIntPtrIntPtrInt32">
            <summary>Sets the stub of ISQLiteNativeModule.xColumn(IntPtr pCursor, IntPtr pContext, Int32 index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XCommitIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xCommit(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XConnectIntPtrIntPtrInt32IntPtrIntPtrRefIntPtrRef">
            <summary>Sets the stub of ISQLiteNativeModule.xConnect(IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XCreateIntPtrIntPtrInt32IntPtrIntPtrRefIntPtrRef">
            <summary>Sets the stub of ISQLiteNativeModule.xCreate(IntPtr pDb, IntPtr pAux, Int32 argc, IntPtr argv, IntPtr&amp; pVtab, IntPtr&amp; pError)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XDestroyIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xDestroy(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XDisconnectIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xDisconnect(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XEofIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xEof(IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XFilterIntPtrInt32IntPtrInt32IntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xFilter(IntPtr pCursor, Int32 idxNum, IntPtr idxStr, Int32 argc, IntPtr argv)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XFindFunctionIntPtrInt32IntPtrSQLiteCallbackRefIntPtrRef">
            <summary>Sets the stub of ISQLiteNativeModule.xFindFunction(IntPtr pVtab, Int32 nArg, IntPtr zName, SQLiteCallback&amp; callback, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XNextIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xNext(IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XOpenIntPtrIntPtrRef">
            <summary>Sets the stub of ISQLiteNativeModule.xOpen(IntPtr pVtab, IntPtr&amp; pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XReleaseIntPtrInt32">
            <summary>Sets the stub of ISQLiteNativeModule.xRelease(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XRenameIntPtrIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xRename(IntPtr pVtab, IntPtr zNew)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XRollbackIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xRollback(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XRollbackToIntPtrInt32">
            <summary>Sets the stub of ISQLiteNativeModule.xRollbackTo(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XRowIdIntPtrInt64Ref">
            <summary>Sets the stub of ISQLiteNativeModule.xRowId(IntPtr pCursor, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XSavepointIntPtrInt32">
            <summary>Sets the stub of ISQLiteNativeModule.xSavepoint(IntPtr pVtab, Int32 iSavepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XSyncIntPtr">
            <summary>Sets the stub of ISQLiteNativeModule.xSync(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubISQLiteNativeModule.XUpdateIntPtrInt32IntPtrInt64Ref">
            <summary>Sets the stub of ISQLiteNativeModule.xUpdate(IntPtr pVtab, Int32 argc, IntPtr argv, Int64&amp; rowId)</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubSQLiteFunction">
            <summary>Stub type of System.Data.SQLite.SQLiteFunction</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunction.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunction.#ctor(System.Data.SQLite.SQLiteDateFormats,System.DateTimeKind,System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunction.Compare(System.String,System.String)">
            <summary>Sets the stub of SQLiteFunction.Compare(String param1, String param2)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunction.CompareStringString">
            <summary>Sets the stub of SQLiteFunction.Compare(String param1, String param2)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunction.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteFunction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunction.DisposeBoolean">
            <summary>Sets the stub of SQLiteFunction.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunction.Final(System.Object)">
            <summary>Sets the stub of SQLiteFunction.Final(Object contextData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunction.FinalObject">
            <summary>Sets the stub of SQLiteFunction.Final(Object contextData)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunction.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteFunction</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunction.Invoke(System.Object[])">
            <summary>Sets the stub of SQLiteFunction.Invoke(Object[] args)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunction.InvokeObjectArray">
            <summary>Sets the stub of SQLiteFunction.Invoke(Object[] args)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunction.Step(System.Object[],System.Int32,System.Object@)">
            <summary>Sets the stub of SQLiteFunction.Step(Object[] args, Int32 stepNumber, Object&amp; contextData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunction.StepObjectArrayInt32ObjectRef">
            <summary>Sets the stub of SQLiteFunction.Step(Object[] args, Int32 stepNumber, Object&amp; contextData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteFunction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteFunction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteFunction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubSQLiteFunctionEx">
            <summary>Stub type of System.Data.SQLite.SQLiteFunctionEx</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.Compare(System.String,System.String)">
            <summary>Sets the stub of SQLiteFunction.Compare(String param1, String param2)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.CompareStringString">
            <summary>Sets the stub of SQLiteFunction.Compare(String param1, String param2)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteFunctionEx.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.DisposeBoolean">
            <summary>Sets the stub of SQLiteFunctionEx.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.Final(System.Object)">
            <summary>Sets the stub of SQLiteFunction.Final(Object contextData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.FinalObject">
            <summary>Sets the stub of SQLiteFunction.Final(Object contextData)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteFunctionEx</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.Invoke(System.Object[])">
            <summary>Sets the stub of SQLiteFunction.Invoke(Object[] args)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.InvokeObjectArray">
            <summary>Sets the stub of SQLiteFunction.Invoke(Object[] args)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.Step(System.Object[],System.Int32,System.Object@)">
            <summary>Sets the stub of SQLiteFunction.Step(Object[] args, Int32 stepNumber, Object&amp; contextData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.StepObjectArrayInt32ObjectRef">
            <summary>Sets the stub of SQLiteFunction.Step(Object[] args, Int32 stepNumber, Object&amp; contextData)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteFunctionEx.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubSQLiteModule">
            <summary>Stub type of System.Data.SQLite.SQLiteModule</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.AllocateCursor">
            <summary>Sets the stub of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.AllocateCursor01">
            <summary>Sets the stub of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.AllocateTable">
            <summary>Sets the stub of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.AllocateTable01">
            <summary>Sets the stub of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.AttachBackingFieldToLogErrors">
            <summary>Attaches delegates to emulate StubSQLiteModule.LogErrors as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.AttachBackingFieldToLogErrorsNoThrow">
            <summary>Attaches delegates to emulate StubSQLiteModule.LogErrorsNoThrow as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.AttachBackingFieldToLogExceptions">
            <summary>Attaches delegates to emulate StubSQLiteModule.LogExceptions as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.AttachBackingFieldToLogExceptionsNoThrow">
            <summary>Attaches delegates to emulate StubSQLiteModule.LogExceptionsNoThrow as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Begin(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.BeginSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.BestIndex(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteModule.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the stub of SQLiteModule.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Close(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModule.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.CloseSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModule.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Column(System.Data.SQLite.SQLiteVirtualTableCursor,System.Data.SQLite.SQLiteContext,System.Int32)">
            <summary>Sets the stub of SQLiteModule.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the stub of SQLiteModule.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Commit(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.CommitSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Connect(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of SQLiteModule.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of SQLiteModule.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Create(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of SQLiteModule.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.CreateNativeModuleImpl">
            <summary>Sets the stub of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.CreateNativeModuleImpl01">
            <summary>Sets the stub of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of SQLiteModule.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.CursorFromIntPtr(System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.CursorFromIntPtrIntPtrIntPtr">
            <summary>Sets the stub of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.CursorToIntPtr(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.CursorToIntPtrSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.DeclareFunction(System.Data.SQLite.SQLiteConnection,System.Int32,System.String,System.String@)">
            <summary>Sets the stub of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.DeclareFunctionSQLiteConnectionInt32StringStringRef">
            <summary>Sets the stub of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.DeclareTable(System.Data.SQLite.SQLiteConnection,System.String,System.String@)">
            <summary>Sets the stub of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.DeclareTableSQLiteConnectionStringStringRef">
            <summary>Sets the stub of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Destroy(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.DestroySQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Disconnect(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.DisconnectSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteModule.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.DisposeBoolean">
            <summary>Sets the stub of SQLiteModule.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Eof(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModule.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.EofSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModule.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Filter(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int32,System.String,System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteModule.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the stub of SQLiteModule.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.FindFunction(System.Data.SQLite.SQLiteVirtualTable,System.Int32,System.String,System.Data.SQLite.SQLiteFunction@,System.IntPtr@)">
            <summary>Sets the stub of SQLiteModule.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.FindFunctionSQLiteVirtualTableInt32StringSQLiteFunctionRefIntPtrRef">
            <summary>Sets the stub of SQLiteModule.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.FreeCursor(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.FreeCursorIntPtr">
            <summary>Sets the stub of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.FreeTable(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.FreeTableIntPtr">
            <summary>Sets the stub of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.GetFunctionKey(System.Int32,System.String,System.Data.SQLite.SQLiteFunction)">
            <summary>Sets the stub of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.GetFunctionKeyInt32StringSQLiteFunction">
            <summary>Sets the stub of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.GetNativeModuleImpl">
            <summary>Sets the stub of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.GetNativeModuleImpl01">
            <summary>Sets the stub of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteModule</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.LogErrorsGet">
            <summary>Sets the stub of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.LogErrorsNoThrowGet">
            <summary>Sets the stub of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.LogErrorsNoThrowSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogErrorsNoThrow(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.LogErrorsSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogErrors(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.LogExceptionsGet">
            <summary>Sets the stub of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.LogExceptionsNoThrowGet">
            <summary>Sets the stub of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.LogExceptionsNoThrowSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogExceptionsNoThrow(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.LogExceptionsSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogExceptions(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.NameGet">
            <summary>Sets the stub of SQLiteModule.get_Name()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Next(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModule.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.NextSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModule.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Open(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteVirtualTableCursor@)">
            <summary>Sets the stub of SQLiteModule.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the stub of SQLiteModule.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Release(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModule.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.ReleaseSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModule.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Rename(System.Data.SQLite.SQLiteVirtualTable,System.String)">
            <summary>Sets the stub of SQLiteModule.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.RenameSQLiteVirtualTableString">
            <summary>Sets the stub of SQLiteModule.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Rollback(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.RollbackSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.RollbackTo(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModule.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.RollbackToSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModule.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.RowId(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int64@)">
            <summary>Sets the stub of SQLiteModule.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the stub of SQLiteModule.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Savepoint(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModule.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.SavepointSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModule.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.SetEstimatedCost(System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.SetEstimatedCost(System.Data.SQLite.SQLiteIndex,System.Double)">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.SetEstimatedCostSQLiteIndex">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.SetEstimatedCostSQLiteIndexDouble">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Sync(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.SyncSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.TableFromIntPtr(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.TableFromIntPtrIntPtr">
            <summary>Sets the stub of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.TableToIntPtr(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.TableToIntPtrSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.Update(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteValue[],System.Int64@)">
            <summary>Sets the stub of SQLiteModule.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the stub of SQLiteModule.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModule.ZeroTable(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModule.ZeroTableIntPtr">
            <summary>Sets the stub of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModule.LogErrors">
            <summary>Sets the stub of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModule.LogErrorsNoThrow">
            <summary>Sets the stub of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModule.LogExceptions">
            <summary>Sets the stub of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModule.LogExceptionsNoThrow">
            <summary>Sets the stub of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModule.Name">
            <summary>Sets the stub of SQLiteModule.get_Name()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable">
            <summary>Stub type of System.Data.SQLite.SQLiteModuleEnumerable</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.#ctor(System.String,System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.AllocateCursor">
            <summary>Sets the stub of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.AllocateCursor01">
            <summary>Sets the stub of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.AllocateTable">
            <summary>Sets the stub of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.AllocateTable01">
            <summary>Sets the stub of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.AttachBackingFieldToLogErrors">
            <summary>Attaches delegates to emulate StubSQLiteModuleEnumerable.LogErrors as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.AttachBackingFieldToLogErrorsNoThrow">
            <summary>Attaches delegates to emulate StubSQLiteModuleEnumerable.LogErrorsNoThrow as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.AttachBackingFieldToLogExceptions">
            <summary>Attaches delegates to emulate StubSQLiteModuleEnumerable.LogExceptions as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.AttachBackingFieldToLogExceptionsNoThrow">
            <summary>Attaches delegates to emulate StubSQLiteModuleEnumerable.LogExceptionsNoThrow as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Begin(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.BeginSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.BestIndex(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteModuleEnumerable.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the stub of SQLiteModuleEnumerable.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Close(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CloseSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Column(System.Data.SQLite.SQLiteVirtualTableCursor,System.Data.SQLite.SQLiteContext,System.Int32)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the stub of SQLiteModuleEnumerable.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Commit(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CommitSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Connect(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of SQLiteModuleEnumerable.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Create(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CreateNativeModuleImpl">
            <summary>Sets the stub of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CreateNativeModuleImpl01">
            <summary>Sets the stub of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of SQLiteModuleEnumerable.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CursorEndOfEnumeratorError(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.CursorEndOfEnumeratorError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CursorEndOfEnumeratorErrorSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.CursorEndOfEnumeratorError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CursorFromIntPtr(System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CursorFromIntPtrIntPtrIntPtr">
            <summary>Sets the stub of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CursorToIntPtr(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CursorToIntPtrSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CursorTypeMismatchError(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.CursorTypeMismatchError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CursorTypeMismatchErrorSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.CursorTypeMismatchError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.DeclareFunction(System.Data.SQLite.SQLiteConnection,System.Int32,System.String,System.String@)">
            <summary>Sets the stub of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.DeclareFunctionSQLiteConnectionInt32StringStringRef">
            <summary>Sets the stub of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.DeclareTable(System.Data.SQLite.SQLiteConnection,System.String,System.String@)">
            <summary>Sets the stub of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.DeclareTableSQLiteConnectionStringStringRef">
            <summary>Sets the stub of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Destroy(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.DestroySQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleEnumerable.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Disconnect(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.DisconnectSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleEnumerable.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.DisposeBoolean">
            <summary>Sets the stub of SQLiteModuleEnumerable.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Eof(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.EofSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Filter(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int32,System.String,System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteModuleEnumerable.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the stub of SQLiteModuleEnumerable.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.FindFunction(System.Data.SQLite.SQLiteVirtualTable,System.Int32,System.String,System.Data.SQLite.SQLiteFunction@,System.IntPtr@)">
            <summary>Sets the stub of SQLiteModuleNoop.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.FindFunctionSQLiteVirtualTableInt32StringSQLiteFunctionRefIntPtrRef">
            <summary>Sets the stub of SQLiteModuleNoop.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.FreeCursor(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.FreeCursorIntPtr">
            <summary>Sets the stub of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.FreeTable(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.FreeTableIntPtr">
            <summary>Sets the stub of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetDefaultResultCode">
            <summary>Sets the stub of SQLiteModuleNoop.GetDefaultResultCode()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetDefaultResultCode01">
            <summary>Sets the stub of SQLiteModuleNoop.GetDefaultResultCode()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetFunctionKey(System.Int32,System.String,System.Data.SQLite.SQLiteFunction)">
            <summary>Sets the stub of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetFunctionKeyInt32StringSQLiteFunction">
            <summary>Sets the stub of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetMethodResultCode(System.String)">
            <summary>Sets the stub of SQLiteModuleNoop.GetMethodResultCode(String methodName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetMethodResultCodeString">
            <summary>Sets the stub of SQLiteModuleNoop.GetMethodResultCode(String methodName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetNativeModuleImpl">
            <summary>Sets the stub of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetNativeModuleImpl01">
            <summary>Sets the stub of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetRowIdFromObject(System.Data.SQLite.SQLiteVirtualTableCursor,System.Object)">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetRowIdFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetRowIdFromObjectSQLiteVirtualTableCursorObject">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetRowIdFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetSqlForDeclareTable">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetSqlForDeclareTable()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetSqlForDeclareTable01">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetSqlForDeclareTable()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetStringFromObject(System.Data.SQLite.SQLiteVirtualTableCursor,System.Object)">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetStringFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.GetStringFromObjectSQLiteVirtualTableCursorObject">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetStringFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteModuleEnumerable</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogErrorsGet">
            <summary>Sets the stub of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogErrorsNoThrowGet">
            <summary>Sets the stub of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogErrorsNoThrowSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogErrorsNoThrow(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogErrorsSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogErrors(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogExceptionsGet">
            <summary>Sets the stub of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogExceptionsNoThrowGet">
            <summary>Sets the stub of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogExceptionsNoThrowSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogExceptionsNoThrow(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogExceptionsSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogExceptions(Boolean value)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.MakeRowId(System.Int32,System.Int32)">
            <summary>Sets the stub of SQLiteModuleEnumerable.MakeRowId(Int32 rowIndex, Int32 hashCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.MakeRowIdInt32Int32">
            <summary>Sets the stub of SQLiteModuleEnumerable.MakeRowId(Int32 rowIndex, Int32 hashCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.NameGet">
            <summary>Sets the stub of SQLiteModule.get_Name()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Next(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.NextSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Open(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteVirtualTableCursor@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the stub of SQLiteModuleEnumerable.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Release(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ReleaseSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Rename(System.Data.SQLite.SQLiteVirtualTable,System.String)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.RenameSQLiteVirtualTableString">
            <summary>Sets the stub of SQLiteModuleEnumerable.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ResultCodeToEofResult(System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToEofResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ResultCodeToEofResultSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToEofResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ResultCodeToFindFunctionResult(System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToFindFunctionResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ResultCodeToFindFunctionResultSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToFindFunctionResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Rollback(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.RollbackSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.RollbackTo(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.RollbackToSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.RowId(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int64@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the stub of SQLiteModuleEnumerable.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Savepoint(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.SavepointSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.SetEstimatedCost(System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.SetEstimatedCost(System.Data.SQLite.SQLiteIndex,System.Double)">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.SetEstimatedCostSQLiteIndex">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.SetEstimatedCostSQLiteIndexDouble">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.SetMethodResultCode(System.String,System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.SetMethodResultCode(String methodName, SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.SetMethodResultCodeStringSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.SetMethodResultCode(String methodName, SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Sync(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.SyncSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.TableFromIntPtr(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.TableFromIntPtrIntPtr">
            <summary>Sets the stub of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.TableToIntPtr(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.TableToIntPtrSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Update(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteValue[],System.Int64@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the stub of SQLiteModuleEnumerable.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ZeroTable(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.ZeroTableIntPtr">
            <summary>Sets the stub of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogErrors">
            <summary>Sets the stub of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogErrorsNoThrow">
            <summary>Sets the stub of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogExceptions">
            <summary>Sets the stub of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.LogExceptionsNoThrow">
            <summary>Sets the stub of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleEnumerable.Name">
            <summary>Sets the stub of SQLiteModule.get_Name()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubSQLiteModuleNoop">
            <summary>Stub type of System.Data.SQLite.SQLiteModuleNoop</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.AllocateCursor">
            <summary>Sets the stub of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.AllocateCursor01">
            <summary>Sets the stub of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.AllocateTable">
            <summary>Sets the stub of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.AllocateTable01">
            <summary>Sets the stub of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.AttachBackingFieldToLogErrors">
            <summary>Attaches delegates to emulate StubSQLiteModuleNoop.LogErrors as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.AttachBackingFieldToLogErrorsNoThrow">
            <summary>Attaches delegates to emulate StubSQLiteModuleNoop.LogErrorsNoThrow as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.AttachBackingFieldToLogExceptions">
            <summary>Attaches delegates to emulate StubSQLiteModuleNoop.LogExceptions as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.AttachBackingFieldToLogExceptionsNoThrow">
            <summary>Attaches delegates to emulate StubSQLiteModuleNoop.LogExceptionsNoThrow as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Begin(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.BeginSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.BestIndex(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteModuleNoop.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the stub of SQLiteModuleNoop.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Close(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleNoop.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CloseSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleNoop.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Column(System.Data.SQLite.SQLiteVirtualTableCursor,System.Data.SQLite.SQLiteContext,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the stub of SQLiteModuleNoop.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Commit(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CommitSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Connect(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of SQLiteModuleNoop.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of SQLiteModuleNoop.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Create(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of SQLiteModuleNoop.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CreateNativeModuleImpl">
            <summary>Sets the stub of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CreateNativeModuleImpl01">
            <summary>Sets the stub of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of SQLiteModuleNoop.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CursorFromIntPtr(System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CursorFromIntPtrIntPtrIntPtr">
            <summary>Sets the stub of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CursorToIntPtr(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CursorToIntPtrSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.DeclareFunction(System.Data.SQLite.SQLiteConnection,System.Int32,System.String,System.String@)">
            <summary>Sets the stub of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.DeclareFunctionSQLiteConnectionInt32StringStringRef">
            <summary>Sets the stub of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.DeclareTable(System.Data.SQLite.SQLiteConnection,System.String,System.String@)">
            <summary>Sets the stub of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.DeclareTableSQLiteConnectionStringStringRef">
            <summary>Sets the stub of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Destroy(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.DestroySQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Disconnect(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.DisconnectSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteModuleNoop.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.DisposeBoolean">
            <summary>Sets the stub of SQLiteModuleNoop.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Eof(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleNoop.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.EofSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleNoop.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Filter(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int32,System.String,System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteModuleNoop.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the stub of SQLiteModuleNoop.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.FindFunction(System.Data.SQLite.SQLiteVirtualTable,System.Int32,System.String,System.Data.SQLite.SQLiteFunction@,System.IntPtr@)">
            <summary>Sets the stub of SQLiteModuleNoop.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.FindFunctionSQLiteVirtualTableInt32StringSQLiteFunctionRefIntPtrRef">
            <summary>Sets the stub of SQLiteModuleNoop.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.FreeCursor(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.FreeCursorIntPtr">
            <summary>Sets the stub of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.FreeTable(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.FreeTableIntPtr">
            <summary>Sets the stub of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.GetDefaultResultCode">
            <summary>Sets the stub of SQLiteModuleNoop.GetDefaultResultCode()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.GetDefaultResultCode01">
            <summary>Sets the stub of SQLiteModuleNoop.GetDefaultResultCode()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.GetFunctionKey(System.Int32,System.String,System.Data.SQLite.SQLiteFunction)">
            <summary>Sets the stub of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.GetFunctionKeyInt32StringSQLiteFunction">
            <summary>Sets the stub of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.GetMethodResultCode(System.String)">
            <summary>Sets the stub of SQLiteModuleNoop.GetMethodResultCode(String methodName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.GetMethodResultCodeString">
            <summary>Sets the stub of SQLiteModuleNoop.GetMethodResultCode(String methodName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.GetNativeModuleImpl">
            <summary>Sets the stub of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.GetNativeModuleImpl01">
            <summary>Sets the stub of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteModuleNoop</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogErrorsGet">
            <summary>Sets the stub of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogErrorsNoThrowGet">
            <summary>Sets the stub of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogErrorsNoThrowSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogErrorsNoThrow(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogErrorsSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogErrors(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogExceptionsGet">
            <summary>Sets the stub of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogExceptionsNoThrowGet">
            <summary>Sets the stub of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogExceptionsNoThrowSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogExceptionsNoThrow(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogExceptionsSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogExceptions(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.NameGet">
            <summary>Sets the stub of SQLiteModule.get_Name()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Next(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleNoop.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.NextSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleNoop.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Open(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteVirtualTableCursor@)">
            <summary>Sets the stub of SQLiteModuleNoop.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the stub of SQLiteModuleNoop.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Release(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ReleaseSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Rename(System.Data.SQLite.SQLiteVirtualTable,System.String)">
            <summary>Sets the stub of SQLiteModuleNoop.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.RenameSQLiteVirtualTableString">
            <summary>Sets the stub of SQLiteModuleNoop.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ResultCodeToEofResult(System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToEofResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ResultCodeToEofResultSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToEofResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ResultCodeToFindFunctionResult(System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToFindFunctionResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ResultCodeToFindFunctionResultSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToFindFunctionResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Rollback(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.RollbackSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.RollbackTo(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.RollbackToSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.RowId(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int64@)">
            <summary>Sets the stub of SQLiteModuleNoop.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the stub of SQLiteModuleNoop.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Savepoint(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.SavepointSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.SetEstimatedCost(System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.SetEstimatedCost(System.Data.SQLite.SQLiteIndex,System.Double)">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.SetEstimatedCostSQLiteIndex">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.SetEstimatedCostSQLiteIndexDouble">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.SetMethodResultCode(System.String,System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.SetMethodResultCode(String methodName, SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.SetMethodResultCodeStringSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.SetMethodResultCode(String methodName, SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Sync(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.SyncSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.TableFromIntPtr(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.TableFromIntPtrIntPtr">
            <summary>Sets the stub of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.TableToIntPtr(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.TableToIntPtrSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Update(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteValue[],System.Int64@)">
            <summary>Sets the stub of SQLiteModuleNoop.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the stub of SQLiteModuleNoop.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ZeroTable(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.ZeroTableIntPtr">
            <summary>Sets the stub of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogErrors">
            <summary>Sets the stub of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogErrorsNoThrow">
            <summary>Sets the stub of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogExceptions">
            <summary>Sets the stub of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.LogExceptionsNoThrow">
            <summary>Sets the stub of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteModuleNoop.Name">
            <summary>Sets the stub of SQLiteModule.get_Name()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubSQLiteVirtualTable">
            <summary>Stub type of System.Data.SQLite.SQLiteVirtualTable</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.#ctor(System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.ArgumentsGet">
            <summary>Sets the stub of SQLiteVirtualTable.get_Arguments()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.BestIndex(System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteVirtualTable.BestIndex(SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.BestIndexSQLiteIndex">
            <summary>Sets the stub of SQLiteVirtualTable.BestIndex(SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.DatabaseNameGet">
            <summary>Sets the stub of SQLiteVirtualTable.get_DatabaseName()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteVirtualTable.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.DisposeBoolean">
            <summary>Sets the stub of SQLiteVirtualTable.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.IndexGet">
            <summary>Sets the stub of SQLiteVirtualTable.get_Index()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteVirtualTable</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.ModuleNameGet">
            <summary>Sets the stub of SQLiteVirtualTable.get_ModuleName()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.Rename(System.String)">
            <summary>Sets the stub of SQLiteVirtualTable.Rename(String name)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.RenameString">
            <summary>Sets the stub of SQLiteVirtualTable.Rename(String name)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.TableNameGet">
            <summary>Sets the stub of SQLiteVirtualTable.get_TableName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.Arguments">
            <summary>Sets the stub of SQLiteVirtualTable.get_Arguments()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.DatabaseName">
            <summary>Sets the stub of SQLiteVirtualTable.get_DatabaseName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.Index">
            <summary>Sets the stub of SQLiteVirtualTable.get_Index()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.ModuleName">
            <summary>Sets the stub of SQLiteVirtualTable.get_ModuleName()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTable.TableName">
            <summary>Sets the stub of SQLiteVirtualTable.get_TableName()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor">
            <summary>Stub type of System.Data.SQLite.SQLiteVirtualTableCursor</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.#ctor(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteVirtualTableCursor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.DisposeBoolean">
            <summary>Sets the stub of SQLiteVirtualTableCursor.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.Filter(System.Int32,System.String,System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteVirtualTableCursor.Filter(Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.FilterInt32StringSQLiteValueArray">
            <summary>Sets the stub of SQLiteVirtualTableCursor.Filter(Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.GetRowIndex">
            <summary>Sets the stub of SQLiteVirtualTableCursor.GetRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.GetRowIndex01">
            <summary>Sets the stub of SQLiteVirtualTableCursor.GetRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.IndexNumberGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexNumber()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.IndexStringGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexString()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteVirtualTableCursor</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.NextRowIndex">
            <summary>Sets the stub of SQLiteVirtualTableCursor.NextRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.NextRowIndex01">
            <summary>Sets the stub of SQLiteVirtualTableCursor.NextRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.TableGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Table()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.TryPersistValues(System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteVirtualTableCursor.TryPersistValues(SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.TryPersistValuesSQLiteValueArray">
            <summary>Sets the stub of SQLiteVirtualTableCursor.TryPersistValues(SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.ValuesGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Values()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.IndexNumber">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexNumber()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.IndexString">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.Table">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Table()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursor.Values">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Values()</summary>
        </member>
        <member name="T:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator">
            <summary>Stub type of System.Data.SQLite.SQLiteVirtualTableCursorEnumerator</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.#ctor(System.Data.SQLite.SQLiteVirtualTable,System.Collections.IEnumerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.CheckClosed">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.CheckClosed()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.CheckClosed01">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.CheckClosed()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Close">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.Close()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Close01">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.Close()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.CurrentGet">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_Current()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.DisposeBoolean">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.EndOfEnumeratorGet">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_EndOfEnumerator()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Filter(System.Int32,System.String,System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteVirtualTableCursor.Filter(Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.FilterInt32StringSQLiteValueArray">
            <summary>Sets the stub of SQLiteVirtualTableCursor.Filter(Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.GetRowIndex">
            <summary>Sets the stub of SQLiteVirtualTableCursor.GetRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.GetRowIndex01">
            <summary>Sets the stub of SQLiteVirtualTableCursor.GetRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.IndexNumberGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexNumber()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.IndexStringGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexString()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteVirtualTableCursorEnumerator</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.IsOpenGet">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_IsOpen()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.MoveNext">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.MoveNext()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.MoveNext01">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.MoveNext()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.NextRowIndex">
            <summary>Sets the stub of SQLiteVirtualTableCursor.NextRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.NextRowIndex01">
            <summary>Sets the stub of SQLiteVirtualTableCursor.NextRowIndex()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Reset">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.Reset()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Reset01">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.Reset()</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.TableGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Table()</summary>
        </member>
        <member name="M:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.TryPersistValues(System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteVirtualTableCursor.TryPersistValues(SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.TryPersistValuesSQLiteValueArray">
            <summary>Sets the stub of SQLiteVirtualTableCursor.TryPersistValues(SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.ValuesGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Values()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Current">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_Current()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.EndOfEnumerator">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_EndOfEnumerator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.IndexNumber">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexNumber()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.IndexString">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.IsOpen">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_IsOpen()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Table">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Table()</summary>
        </member>
        <member name="P:System.Data.SQLite.Fakes.StubSQLiteVirtualTableCursorEnumerator.Values">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Values()</summary>
        </member>
        <member name="T:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1">
            <summary>Shim type of System.Data.SQLite.Generic.SQLiteModuleEnumerable`1</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.#ctor(System.Data.SQLite.Generic.SQLiteModuleEnumerable{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.Bind(System.Data.SQLite.ISQLiteManagedModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.CheckDisposed">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.ConstructorStringIEnumerableOfT0">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.SQLiteModuleEnumerable`1(String name, IEnumerable`1&lt;!0&gt; enumerable)</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.DisposeBoolean">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="T:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.AllInstances.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteModuleEnumerable`1.AllInstances.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the shim of SQLiteModuleEnumerable`1.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="T:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1">
            <summary>Shim type of System.Data.SQLite.Generic.SQLiteVirtualTableCursorEnumerator`1</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.#ctor(System.Data.SQLite.Generic.SQLiteVirtualTableCursorEnumerator{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.Bind(System.Data.SQLite.ISQLiteNativeHandle)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.Bind(System.Collections.IEnumerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.Bind(System.Collections.Generic.IEnumerator{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.CheckDisposed">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.Close">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.Close()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.ConstructorSQLiteVirtualTableIEnumeratorOfT0">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.SQLiteVirtualTableCursorEnumerator`1(SQLiteVirtualTable table, IEnumerator`1&lt;!0&gt; enumerator)</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.CurrentSystemCollectionsGenericIEnumeratorTget">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.System.Collections.Generic.IEnumerator&lt;T&gt;.get_Current()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.DisposeBoolean">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.AllInstances.CheckDisposed">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.CheckDisposed()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.AllInstances.Close">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.Close()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.AllInstances.CurrentSystemCollectionsGenericIEnumeratorTget">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.System.Collections.Generic.IEnumerator&lt;T&gt;.get_Current()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.ShimSQLiteVirtualTableCursorEnumerator`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SQLiteVirtualTableCursorEnumerator`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="T:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1">
            <summary>Stub type of System.Data.SQLite.Generic.SQLiteModuleEnumerable`1</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.#ctor(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.AllocateCursor">
            <summary>Sets the stub of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.AllocateCursor01">
            <summary>Sets the stub of SQLiteModule.AllocateCursor()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.AllocateTable">
            <summary>Sets the stub of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.AllocateTable01">
            <summary>Sets the stub of SQLiteModule.AllocateTable()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.AttachBackingFieldToLogErrors">
            <summary>Attaches delegates to emulate StubSQLiteModuleEnumerable.LogErrors as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.AttachBackingFieldToLogErrorsNoThrow">
            <summary>Attaches delegates to emulate StubSQLiteModuleEnumerable.LogErrorsNoThrow as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.AttachBackingFieldToLogExceptions">
            <summary>Attaches delegates to emulate StubSQLiteModuleEnumerable.LogExceptions as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.AttachBackingFieldToLogExceptionsNoThrow">
            <summary>Attaches delegates to emulate StubSQLiteModuleEnumerable.LogExceptionsNoThrow as a property with a backing field.</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Begin(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.BeginSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Begin(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.BestIndex(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteModuleEnumerable.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.BestIndexSQLiteVirtualTableSQLiteIndex">
            <summary>Sets the stub of SQLiteModuleEnumerable.BestIndex(SQLiteVirtualTable table, SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Close(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CloseSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.Close(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Column(System.Data.SQLite.SQLiteVirtualTableCursor,System.Data.SQLite.SQLiteContext,System.Int32)">
            <summary>Sets the stub of SQLiteModuleEnumerable`1.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ColumnSQLiteVirtualTableCursorSQLiteContextInt32">
            <summary>Sets the stub of SQLiteModuleEnumerable`1.Column(SQLiteVirtualTableCursor cursor, SQLiteContext context, Int32 index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Commit(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CommitSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Commit(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Connect(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ConnectSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of SQLiteModuleEnumerable.Connect(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Create(System.Data.SQLite.SQLiteConnection,System.IntPtr,System.String[],System.Data.SQLite.SQLiteVirtualTable@,System.String@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CreateNativeModuleImpl">
            <summary>Sets the stub of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CreateNativeModuleImpl01">
            <summary>Sets the stub of SQLiteModule.CreateNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CreateSQLiteConnectionIntPtrStringArraySQLiteVirtualTableRefStringRef">
            <summary>Sets the stub of SQLiteModuleEnumerable.Create(SQLiteConnection connection, IntPtr pClientData, String[] arguments, SQLiteVirtualTable&amp; table, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CursorEndOfEnumeratorError(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.CursorEndOfEnumeratorError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CursorEndOfEnumeratorErrorSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.CursorEndOfEnumeratorError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CursorFromIntPtr(System.IntPtr,System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CursorFromIntPtrIntPtrIntPtr">
            <summary>Sets the stub of SQLiteModule.CursorFromIntPtr(IntPtr pVtab, IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CursorToIntPtr(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CursorToIntPtrSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModule.CursorToIntPtr(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CursorTypeMismatchError(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.CursorTypeMismatchError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CursorTypeMismatchErrorSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.CursorTypeMismatchError(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.DeclareFunction(System.Data.SQLite.SQLiteConnection,System.Int32,System.String,System.String@)">
            <summary>Sets the stub of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.DeclareFunctionSQLiteConnectionInt32StringStringRef">
            <summary>Sets the stub of SQLiteModule.DeclareFunction(SQLiteConnection connection, Int32 argumentCount, String name, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.DeclareTable(System.Data.SQLite.SQLiteConnection,System.String,System.String@)">
            <summary>Sets the stub of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.DeclareTableSQLiteConnectionStringStringRef">
            <summary>Sets the stub of SQLiteModule.DeclareTable(SQLiteConnection connection, String sql, String&amp; error)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Destroy(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.DestroySQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleEnumerable.Destroy(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Disconnect(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.DisconnectSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleEnumerable.Disconnect(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteModuleEnumerable`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.DisposeBoolean">
            <summary>Sets the stub of SQLiteModuleEnumerable`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Eof(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.EofSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.Eof(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Filter(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int32,System.String,System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteModuleEnumerable.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.FilterSQLiteVirtualTableCursorInt32StringSQLiteValueArray">
            <summary>Sets the stub of SQLiteModuleEnumerable.Filter(SQLiteVirtualTableCursor cursor, Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.FindFunction(System.Data.SQLite.SQLiteVirtualTable,System.Int32,System.String,System.Data.SQLite.SQLiteFunction@,System.IntPtr@)">
            <summary>Sets the stub of SQLiteModuleNoop.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.FindFunctionSQLiteVirtualTableInt32StringSQLiteFunctionRefIntPtrRef">
            <summary>Sets the stub of SQLiteModuleNoop.FindFunction(SQLiteVirtualTable table, Int32 argumentCount, String name, SQLiteFunction&amp; function, IntPtr&amp; pClientData)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.FreeCursor(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.FreeCursorIntPtr">
            <summary>Sets the stub of SQLiteModule.FreeCursor(IntPtr pCursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.FreeTable(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.FreeTableIntPtr">
            <summary>Sets the stub of SQLiteModule.FreeTable(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetDefaultResultCode">
            <summary>Sets the stub of SQLiteModuleNoop.GetDefaultResultCode()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetDefaultResultCode01">
            <summary>Sets the stub of SQLiteModuleNoop.GetDefaultResultCode()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetFunctionKey(System.Int32,System.String,System.Data.SQLite.SQLiteFunction)">
            <summary>Sets the stub of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetFunctionKeyInt32StringSQLiteFunction">
            <summary>Sets the stub of SQLiteModule.GetFunctionKey(Int32 argumentCount, String name, SQLiteFunction function)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetMethodResultCode(System.String)">
            <summary>Sets the stub of SQLiteModuleNoop.GetMethodResultCode(String methodName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetMethodResultCodeString">
            <summary>Sets the stub of SQLiteModuleNoop.GetMethodResultCode(String methodName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetNativeModuleImpl">
            <summary>Sets the stub of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetNativeModuleImpl01">
            <summary>Sets the stub of SQLiteModule.GetNativeModuleImpl()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetRowIdFromObject(System.Data.SQLite.SQLiteVirtualTableCursor,System.Object)">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetRowIdFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetRowIdFromObjectSQLiteVirtualTableCursorObject">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetRowIdFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetSqlForDeclareTable">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetSqlForDeclareTable()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetSqlForDeclareTable01">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetSqlForDeclareTable()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetStringFromObject(System.Data.SQLite.SQLiteVirtualTableCursor,System.Object)">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetStringFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.GetStringFromObjectSQLiteVirtualTableCursorObject">
            <summary>Sets the stub of SQLiteModuleEnumerable.GetStringFromObject(SQLiteVirtualTableCursor cursor, Object value)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteModuleEnumerable</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogErrorsGet">
            <summary>Sets the stub of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogErrorsNoThrowGet">
            <summary>Sets the stub of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogErrorsNoThrowSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogErrorsNoThrow(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogErrorsSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogErrors(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogExceptionsGet">
            <summary>Sets the stub of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogExceptionsNoThrowGet">
            <summary>Sets the stub of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogExceptionsNoThrowSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogExceptionsNoThrow(Boolean value)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogExceptionsSetBoolean">
            <summary>Sets the stub of SQLiteModule.set_LogExceptions(Boolean value)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.MakeRowId(System.Int32,System.Int32)">
            <summary>Sets the stub of SQLiteModuleEnumerable.MakeRowId(Int32 rowIndex, Int32 hashCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.MakeRowIdInt32Int32">
            <summary>Sets the stub of SQLiteModuleEnumerable.MakeRowId(Int32 rowIndex, Int32 hashCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.NameGet">
            <summary>Sets the stub of SQLiteModule.get_Name()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Next(System.Data.SQLite.SQLiteVirtualTableCursor)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.NextSQLiteVirtualTableCursor">
            <summary>Sets the stub of SQLiteModuleEnumerable.Next(SQLiteVirtualTableCursor cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Open(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteVirtualTableCursor@)">
            <summary>Sets the stub of SQLiteModuleEnumerable`1.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.OpenSQLiteVirtualTableSQLiteVirtualTableCursorRef">
            <summary>Sets the stub of SQLiteModuleEnumerable`1.Open(SQLiteVirtualTable table, SQLiteVirtualTableCursor&amp; cursor)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Release(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ReleaseSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.Release(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Rename(System.Data.SQLite.SQLiteVirtualTable,System.String)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.RenameSQLiteVirtualTableString">
            <summary>Sets the stub of SQLiteModuleEnumerable.Rename(SQLiteVirtualTable table, String newName)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ResultCodeToEofResult(System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToEofResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ResultCodeToEofResultSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToEofResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ResultCodeToFindFunctionResult(System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToFindFunctionResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ResultCodeToFindFunctionResultSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.ResultCodeToFindFunctionResult(SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Rollback(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.RollbackSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Rollback(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.RollbackTo(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.RollbackToSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.RollbackTo(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.RowId(System.Data.SQLite.SQLiteVirtualTableCursor,System.Int64@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.RowIdSQLiteVirtualTableCursorInt64Ref">
            <summary>Sets the stub of SQLiteModuleEnumerable.RowId(SQLiteVirtualTableCursor cursor, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Savepoint(System.Data.SQLite.SQLiteVirtualTable,System.Int32)">
            <summary>Sets the stub of SQLiteModuleNoop.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.SavepointSQLiteVirtualTableInt32">
            <summary>Sets the stub of SQLiteModuleNoop.Savepoint(SQLiteVirtualTable table, Int32 savepoint)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.SetEstimatedCost(System.Data.SQLite.SQLiteIndex)">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.SetEstimatedCost(System.Data.SQLite.SQLiteIndex,System.Double)">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.SetEstimatedCostSQLiteIndex">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.SetEstimatedCostSQLiteIndexDouble">
            <summary>Sets the stub of SQLiteModule.SetEstimatedCost(SQLiteIndex index, Double estimatedCost)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.SetMethodResultCode(System.String,System.Data.SQLite.SQLiteErrorCode)">
            <summary>Sets the stub of SQLiteModuleNoop.SetMethodResultCode(String methodName, SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.SetMethodResultCodeStringSQLiteErrorCode">
            <summary>Sets the stub of SQLiteModuleNoop.SetMethodResultCode(String methodName, SQLiteErrorCode resultCode)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Sync(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModuleNoop.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.SyncSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModuleNoop.Sync(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.TableFromIntPtr(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.TableFromIntPtrIntPtr">
            <summary>Sets the stub of SQLiteModule.TableFromIntPtr(IntPtr pVtab)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.TableToIntPtr(System.Data.SQLite.SQLiteVirtualTable)">
            <summary>Sets the stub of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.TableToIntPtrSQLiteVirtualTable">
            <summary>Sets the stub of SQLiteModule.TableToIntPtr(SQLiteVirtualTable table)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Update(System.Data.SQLite.SQLiteVirtualTable,System.Data.SQLite.SQLiteValue[],System.Int64@)">
            <summary>Sets the stub of SQLiteModuleEnumerable.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.UpdateSQLiteVirtualTableSQLiteValueArrayInt64Ref">
            <summary>Sets the stub of SQLiteModuleEnumerable.Update(SQLiteVirtualTable table, SQLiteValue[] values, Int64&amp; rowId)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ZeroTable(System.IntPtr)">
            <summary>Sets the stub of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.ZeroTableIntPtr">
            <summary>Sets the stub of SQLiteModule.ZeroTable(IntPtr pVtab)</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogErrors">
            <summary>Sets the stub of SQLiteModule.get_LogErrors()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogErrorsNoThrow">
            <summary>Sets the stub of SQLiteModule.get_LogErrorsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogExceptions">
            <summary>Sets the stub of SQLiteModule.get_LogExceptions()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.LogExceptionsNoThrow">
            <summary>Sets the stub of SQLiteModule.get_LogExceptionsNoThrow()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteModuleEnumerable`1.Name">
            <summary>Sets the stub of SQLiteModule.get_Name()</summary>
        </member>
        <member name="T:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1">
            <summary>Stub type of System.Data.SQLite.Generic.SQLiteVirtualTableCursorEnumerator`1</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.#ctor(System.Data.SQLite.SQLiteVirtualTable,System.Collections.Generic.IEnumerator{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.CheckClosed">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.CheckClosed()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.CheckClosed01">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.CheckClosed()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Close">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator`1.Close()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Close01">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator`1.Close()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.CurrentGet">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_Current()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Dispose(System.Boolean)">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.DisposeBoolean">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.EndOfEnumeratorGet">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_EndOfEnumerator()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Filter(System.Int32,System.String,System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteVirtualTableCursor.Filter(Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.FilterInt32StringSQLiteValueArray">
            <summary>Sets the stub of SQLiteVirtualTableCursor.Filter(Int32 indexNumber, String indexString, SQLiteValue[] values)</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.GetRowIndex">
            <summary>Sets the stub of SQLiteVirtualTableCursor.GetRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.GetRowIndex01">
            <summary>Sets the stub of SQLiteVirtualTableCursor.GetRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.IndexNumberGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexNumber()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.IndexStringGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexString()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.InitializeStub">
            <summary>Initializes a new instance of type StubSQLiteVirtualTableCursorEnumerator</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.IsOpenGet">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_IsOpen()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.MoveNext">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.MoveNext()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.MoveNext01">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.MoveNext()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.NextRowIndex">
            <summary>Sets the stub of SQLiteVirtualTableCursor.NextRowIndex()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.NextRowIndex01">
            <summary>Sets the stub of SQLiteVirtualTableCursor.NextRowIndex()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Reset">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.Reset()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Reset01">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.Reset()</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.TableGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Table()</summary>
        </member>
        <member name="M:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.TryPersistValues(System.Data.SQLite.SQLiteValue[])">
            <summary>Sets the stub of SQLiteVirtualTableCursor.TryPersistValues(SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.TryPersistValuesSQLiteValueArray">
            <summary>Sets the stub of SQLiteVirtualTableCursor.TryPersistValues(SQLiteValue[] values)</summary>
        </member>
        <member name="F:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.ValuesGet">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Values()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Current">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_Current()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.EndOfEnumerator">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_EndOfEnumerator()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.IndexNumber">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexNumber()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.IndexString">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_IndexString()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.IsOpen">
            <summary>Sets the stub of SQLiteVirtualTableCursorEnumerator.get_IsOpen()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Table">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Table()</summary>
        </member>
        <member name="P:System.Data.SQLite.Generic.Fakes.StubSQLiteVirtualTableCursorEnumerator`1.Values">
            <summary>Sets the stub of SQLiteVirtualTableCursor.get_Values()</summary>
        </member>
    </members>
</doc>
